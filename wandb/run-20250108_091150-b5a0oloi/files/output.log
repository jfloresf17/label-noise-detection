Traceback (most recent call last):
  File "/home/tidop/projects/Noisy-Student/train_teacher.py", line 276, in <module>
    typer.run(train_teacher)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 1080, in run
    app()
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 338, in __call__
    raise e
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 321, in __call__
    return get_command(self)(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/core.py", line 665, in main
    return _main(
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/core.py", line 197, in _main
    rv = self.invoke(ctx)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 703, in wrapper
    return callback(**use_params)
  File "/home/tidop/projects/Noisy-Student/train_teacher.py", line 100, in train_teacher
    sce_loss = SCELoss(alpha=alpha, beta=beta, num_classes=1)
TypeError: SCELoss.__init__() got an unexpected keyword argument 'num_classes'
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /home/tidop/projects/Noisy-Student/train_teacher.py:100 in train_teacher     │
│                                                                              │
│    97 │   # train_loader = DataLoader(combined_train_dataset, batch_size=bat │
│    98 │   # val_loader = DataLoader(combined_val_dataset, batch_size=batch_s │
│    99 │                                                                      │
│ ❱ 100 │   sce_loss = SCELoss(alpha=alpha, beta=beta, num_classes=1)          │
│   101 │                                                                      │
│   102 │                                                                      │
│   103 │   patience = 5  # Number of epochs to wait before early stopping     │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │        alpha = 0.01                                                      │ │
│ │   batch_size = 16                                                        │ │
│ │         beta = 1                                                         │ │
│ │       config = {                                                         │ │
│ │                │   'device': 'cuda',                                     │ │
│ │                │   'learning_rate': '1e-4',                              │ │
│ │                │   'data': {                                             │ │
│ │                │   │   'batch_size': 16,                                 │ │
│ │                │   │   'num_workers': 16,                                │ │
│ │                │   │   'whu_path':                                       │ │
│ │                '/media/tidop/Datos_4TB1/databases/whu_adjusted',         │ │
│ │                │   │   'alabama_path':                                   │ │
│ │                '/media/tidop/Datos_4TB1/databases/alabama',              │ │
│ │                │   │   'datacentric_image_path':                         │ │
│ │                '/media/tidop/Datos_4TB1/databases/kaggle/dataset/traini… │ │
│ │                │   │   'label_noisy_path':                               │ │
│ │                '/media/tidop/Datos_4TB1/databases/kaggle/dataset/traini… │ │
│ │                │   },                                                    │ │
│ │                │   'Normalize': {                                        │ │
│ │                │   │   'apply': True,                                    │ │
│ │                │   │   'WHU': {                                          │ │
│ │                │   │   │   'mean': [                                     │ │
│ │                │   │   │   │   72.62323902,                              │ │
│ │                │   │   │   │   99.33869521,                              │ │
│ │                │   │   │   │   82.94464024                               │ │
│ │                │   │   │   ],                                            │ │
│ │                │   │   │   'std': [                                      │ │
│ │                │   │   │   │   43.81751311,                              │ │
│ │                │   │   │   │   42.46326449,                              │ │
│ │                │   │   │   │   50.62061044                               │ │
│ │                │   │   │   ]                                             │ │
│ │                │   │   },                                                │ │
│ │                │   │   'Alabama': {                                      │ │
│ │                │   │   │   'mean': [                                     │ │
│ │                │   │   │   │   83.00301721,                              │ │
│ │                │   │   │   │   91.24630964,                              │ │
│ │                │   │   │   │   87.26586959                               │ │
│ │                │   │   │   ],                                            │ │
│ │                │   │   │   'std': [                                      │ │
│ │                │   │   │   │   33.38048494,                              │ │
│ │                │   │   │   │   36.60072106,                              │ │
│ │                │   │   │   │   41.38057245                               │ │
│ │                │   │   │   ]                                             │ │
│ │                │   │   },                                                │ │
│ │                │   │   'WHU + Alabama': {                                │ │
│ │                │   │   │   'mean': [                                     │ │
│ │                │   │   │   │   94.21397367,                              │ │
│ │                │   │   │   │   102.78712076,                             │ │
│ │                │   │   │   │   99.94002467                               │ │
│ │                │   │   │   ],                                            │ │
│ │                │   │   │   'std': [                                      │ │
│ │                │   │   │   │   40.95295341,                              │ │
│ │                │   │   │   │   41.52023864,                              │ │
│ │                │   │   │   │   45.4620858                                │ │
│ │                │   │   │   ]                                             │ │
│ │                │   │   },                                                │ │
│ │                │   │   'DataCentric': {                                  │ │
│ │                │   │   │   'mean': [                                     │ │
│ │                │   │   │   │   72.74413315,                              │ │
│ │                │   │   │   │   99.76137101,                              │ │
│ │                │   │   │   │   82.70024275                               │ │
│ │                │   │   │   ],                                            │ │
│ │                │   │   │   'std': [                                      │ │
│ │                │   │   │   │   36.28290664,                              │ │
│ │                │   │   │   │   34.82507359,                              │ │
│ │                │   │   │   │   41.48902725                               │ │
│ │                │   │   │   ]                                             │ │
│ │                │   │   }                                                 │ │
│ │                │   },                                                    │ │
│ │                │   'loss': {'alpha': 0.01, 'beta': 1},                   │ │
│ │                │   'trainer': {                                          │ │
│ │                │   │   'wandb_project': 'Unet-NRN-RSSEG',                │ │
│ │                │   │   'experiment_name': 'Unet-WHU-Kaggle',             │ │
│ │                │   │   'max_epochs': 50                                  │ │
│ │                │   }                                                     │ │
│ │                }                                                         │ │
│ │  config_path = 'config.yaml'                                             │ │
│ │       device = 'cuda'                                                    │ │
│ │       epochs = 50                                                        │ │
│ │  input_paths = '/media/tidop/Datos_4TB1/databases/kaggle/dataset/traini… │ │
│ │  label_paths = '/media/tidop/Datos_4TB1/databases/kaggle/dataset/traini… │ │
│ │           lr = 0.0001                                                    │ │
│ │         mean = [72.74413315, 99.76137101, 82.70024275]                   │ │
│ │    normalize = True                                                      │ │
│ │  num_workers = 16                                                        │ │
│ │    optimizer = Adam (                                                    │ │
│ │                Parameter Group 0                                         │ │
│ │                │   amsgrad: False                                        │ │
│ │                │   betas: (0.9, 0.999)                                   │ │
│ │                │   capturable: False                                     │ │
│ │                │   differentiable: False                                 │ │
│ │                │   eps: 1e-08                                            │ │
│ │                │   foreach: None                                         │ │
│ │                │   fused: None                                           │ │
│ │                │   lr: 0.0001                                            │ │
│ │                │   maximize: False                                       │ │
│ │                │   weight_decay: 0                                       │ │
│ │                )                                                         │ │
│ │    scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau object at     │ │
│ │                0x7659d93b3430>                                           │ │
│ │          std = [36.28290664, 34.82507359, 41.48902725]                   │ │
│ │      teacher = ResUnetTeacher(                                           │ │
│ │                  (inc): DoubleConv(                                      │ │
│ │                │   (conv): Sequential(                                   │ │
│ │                │     (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1,   │ │
│ │                1), padding=(1, 1), bias=False)                           │ │
│ │                │     (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,       │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │     (2): ReLU(inplace=True)                             │ │
│ │                │     (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,  │ │
│ │                1), padding=(1, 1), bias=False)                           │ │
│ │                │     (4): BatchNorm2d(64, eps=1e-05, momentum=0.1,       │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │     (5): ReLU(inplace=True)                             │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (down1): Down(                                          │ │
│ │                │   (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, │ │
│ │                dilation=1, ceil_mode=False)                              │ │
│ │                │   (conv): DoubleConv(                                   │ │
│ │                │     (conv): Sequential(                                 │ │
│ │                │   │   (0): Conv2d(64, 128, kernel_size=(3, 3),          │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (2): ReLU(inplace=True)                           │ │
│ │                │   │   (3): Conv2d(128, 128, kernel_size=(3, 3),         │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (4): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (5): ReLU(inplace=True)                           │ │
│ │                │     )                                                   │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (down2): Down(                                          │ │
│ │                │   (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, │ │
│ │                dilation=1, ceil_mode=False)                              │ │
│ │                │   (conv): DoubleConv(                                   │ │
│ │                │     (conv): Sequential(                                 │ │
│ │                │   │   (0): Conv2d(128, 256, kernel_size=(3, 3),         │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (2): ReLU(inplace=True)                           │ │
│ │                │   │   (3): Conv2d(256, 256, kernel_size=(3, 3),         │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (4): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (5): ReLU(inplace=True)                           │ │
│ │                │     )                                                   │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (up1): Up(                                              │ │
│ │                │   (up): ConvTranspose2d(256, 128, kernel_size=(2, 2),   │ │
│ │                stride=(2, 2))                                            │ │
│ │                │   (conv): DoubleConv(                                   │ │
│ │                │     (conv): Sequential(                                 │ │
│ │                │   │   (0): Conv2d(256, 128, kernel_size=(3, 3),         │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (2): ReLU(inplace=True)                           │ │
│ │                │   │   (3): Conv2d(128, 128, kernel_size=(3, 3),         │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (4): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (5): ReLU(inplace=True)                           │ │
│ │                │     )                                                   │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (att1): AttentionBlock(                                 │ │
│ │                │   (channel_attention): ChannelAttention(                │ │
│ │                │     (avg_pool): AdaptiveAvgPool2d(output_size=1)        │ │
│ │                │     (max_pool): AdaptiveMaxPool2d(output_size=1)        │ │
│ │                │     (fc): Sequential(                                   │ │
│ │                │   │   (0): Conv2d(128, 8, kernel_size=(1, 1),           │ │
│ │                stride=(1, 1), bias=False)                                │ │
│ │                │   │   (1): ReLU(inplace=True)                           │ │
│ │                │   │   (2): Conv2d(8, 128, kernel_size=(1, 1),           │ │
│ │                stride=(1, 1), bias=False)                                │ │
│ │                │     )                                                   │ │
│ │                │     (sigmoid): Sigmoid()                                │ │
│ │                │   )                                                     │ │
│ │                │   (spatial_attention): SpatialAttention(                │ │
│ │                │     (avg_pool): AvgPool2d(kernel_size=7, stride=1,      │ │
│ │                padding=3)                                                │ │
│ │                │     (max_pool): MaxPool2d(kernel_size=7, stride=1,      │ │
│ │                padding=3, dilation=1, ceil_mode=False)                   │ │
│ │                │     (conv): Conv2d(256, 1, kernel_size=(7, 7),          │ │
│ │                stride=(1, 1), padding=(3, 3), bias=False)                │ │
│ │                │     (sigmoid): Sigmoid()                                │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (up2): Up(                                              │ │
│ │                │   (up): ConvTranspose2d(128, 64, kernel_size=(2, 2),    │ │
│ │                stride=(2, 2))                                            │ │
│ │                │   (conv): DoubleConv(                                   │ │
│ │                │     (conv): Sequential(                                 │ │
│ │                │   │   (0): Conv2d(128, 64, kernel_size=(3, 3),          │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (2): ReLU(inplace=True)                           │ │
│ │                │   │   (3): Conv2d(64, 64, kernel_size=(3, 3),           │ │
│ │                stride=(1, 1), padding=(1, 1), bias=False)                │ │
│ │                │   │   (4): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │                affine=True, track_running_stats=True)                    │ │
│ │                │   │   (5): ReLU(inplace=True)                           │ │
│ │                │     )                                                   │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (att2): AttentionBlock(                                 │ │
│ │                │   (channel_attention): ChannelAttention(                │ │
│ │                │     (avg_pool): AdaptiveAvgPool2d(output_size=1)        │ │
│ │                │     (max_pool): AdaptiveMaxPool2d(output_size=1)        │ │
│ │                │     (fc): Sequential(                                   │ │
│ │                │   │   (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, │ │
│ │                1), bias=False)                                           │ │
│ │                │   │   (1): ReLU(inplace=True)                           │ │
│ │                │   │   (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, │ │
│ │                1), bias=False)                                           │ │
│ │                │     )                                                   │ │
│ │                │     (sigmoid): Sigmoid()                                │ │
│ │                │   )                                                     │ │
│ │                │   (spatial_attention): SpatialAttention(                │ │
│ │                │     (avg_pool): AvgPool2d(kernel_size=7, stride=1,      │ │
│ │                padding=3)                                                │ │
│ │                │     (max_pool): MaxPool2d(kernel_size=7, stride=1,      │ │
│ │                padding=3, dilation=1, ceil_mode=False)                   │ │
│ │                │     (conv): Conv2d(128, 1, kernel_size=(7, 7),          │ │
│ │                stride=(1, 1), padding=(3, 3), bias=False)                │ │
│ │                │     (sigmoid): Sigmoid()                                │ │
│ │                │   )                                                     │ │
│ │                  )                                                       │ │
│ │                  (outc): Conv2d(64, 1, kernel_size=(1, 1), stride=(1,    │ │
│ │                1))                                                       │ │
│ │                )                                                         │ │
│ │ train_loader = <torch.utils.data.dataloader.DataLoader object at         │ │
│ │                0x7659d93b39a0>                                           │ │
│ │   val_loader = <torch.utils.data.dataloader.DataLoader object at         │ │
│ │                0x7659d93b3af0>                                           │ │
│ │     whu_mean = [72.62323902, 99.33869521, 82.94464024]                   │ │
│ │   whu_module = <dataloader.BuildingDataModule object at 0x7659d93b3340>  │ │
│ │     whu_path = '/media/tidop/Datos_4TB1/databases/whu_adjusted'          │ │
│ │      whu_std = [43.81751311, 42.46326449, 50.62061044]                   │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
╰──────────────────────────────────────────────────────────────────────────────╯
TypeError: SCELoss.__init__() got an unexpected keyword argument 'num_classes'
