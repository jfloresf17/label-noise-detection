LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

   | Name            | Type               | Params | Mode
----------------------------------------------------------------
0  | model           | Unet               | 24.4 M | train
1  | loss            | BCEWithLogitsLoss  | 0      | train
2  | train_f1        | BinaryF1Score      | 0      | train
3  | train_iou       | BinaryJaccardIndex | 0      | train
4  | train_precision | BinaryPrecision    | 0      | train
5  | train_recall    | BinaryRecall       | 0      | train
6  | val_f1          | BinaryF1Score      | 0      | train
7  | val_iou         | BinaryJaccardIndex | 0      | train
8  | val_precision   | BinaryPrecision    | 0      | train
9  | val_recall      | BinaryRecall       | 0      | train
10 | test_f1         | BinaryF1Score      | 0      | train
11 | test_iou        | BinaryJaccardIndex | 0      | train
12 | test_precision  | BinaryPrecision    | 0      | train
13 | test_recall     | BinaryRecall       | 0      | train
----------------------------------------------------------------
24.4 M    Trainable params
0         Non-trainable params
24.4 M    Total params
97.745    Total estimated model params size (MB)
201       Modules in train mode
0         Modules in eval mode
Epoch 12: 100%|██████████| 359/359 [00:23<00:00, 15.35it/s, v_num=f53h]    
                                                                        
Restoring states from the checkpoint path at /home/tidop/projects/Noisy-Student/checkpoints/best_teacher.ckpt
Traceback (most recent call last):
  File "/home/tidop/projects/Noisy-Student/trainer.py", line 183, in <module>
    app()
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 338, in __call__
    raise e
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 321, in __call__
    return get_command(self)(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/core.py", line 665, in main
    return _main(
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/core.py", line 197, in _main
    rv = self.invoke(ctx)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 703, in wrapper
    return callback(**use_params)
  File "/home/tidop/projects/Noisy-Student/trainer.py", line 176, in train
    train_teacher(config)
  File "/home/tidop/projects/Noisy-Student/trainer.py", line 82, in train_teacher
    trainer.test(teacher_model, clean_dataloader, ckpt_path="best")
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 748, in test
    return call._call_and_handle_interrupt(
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 46, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 105, in launch
    return function(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 788, in _test_impl
    results = self._run(model, ckpt_path=ckpt_path)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 950, in _run
    self._checkpoint_connector._restore_modules_and_callbacks(ckpt_path)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py", line 397, in _restore_modules_and_callbacks
    self.resume_start(checkpoint_path)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py", line 79, in resume_start
    loaded_checkpoint = self.trainer.strategy.load_checkpoint(checkpoint_path)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py", line 367, in load_checkpoint
    return self.checkpoint_io.load_checkpoint(checkpoint_path)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/lightning_fabric/plugins/io/torch_io.py", line 81, in load_checkpoint
    raise FileNotFoundError(f"Checkpoint file not found: {path}")
FileNotFoundError: Checkpoint file not found: /home/tidop/projects/Noisy-Student/checkpoints/best_teacher.ckpt
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /home/tidop/projects/Noisy-Student/trainer.py:176 in train                   │
│                                                                              │
│   173 │                                                                      │
│   174 │   ## Train the model                                                 │
│   175 │   if model == "teacher":                                             │
│ ❱ 176 │   │   train_teacher(config)                                          │
│   177 │   elif model == "student":                                           │
│   178 │   │   train_student(config)                                          │
│   179 │   else:                                                              │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │      config = {                                                          │ │
│ │               │   'device': 'cuda',                                      │ │
│ │               │   'data': {                                              │ │
│ │               │   │   'batch_size': 16,                                  │ │
│ │               │   │   'num_workers': 16,                                 │ │
│ │               │   │   'whu_path':                                        │ │
│ │               '/media/tidop/Datos_4TB/databases/whu',                    │ │
│ │               │   │   'datacentric_image_path':                          │ │
│ │               '/media/tidop/Datos_4TB/databases/kaggle/dataset/training… │ │
│ │               │   │   'label_noisy_path':                                │ │
│ │               '/media/tidop/Datos_4TB/databases/kaggle/dataset/training… │ │
│ │               │   │   'teacher_output_path':                             │ │
│ │               '/media/tidop/Datos_4TB/databases/kaggle/dataset/teacher_… │ │
│ │               │   },                                                     │ │
│ │               │   'Normalize': {                                         │ │
│ │               │   │   'apply': True,                                     │ │
│ │               │   │   'WHU': {                                           │ │
│ │               │   │   │   'mean': [                                      │ │
│ │               │   │   │   │   105.34253814,                              │ │
│ │               │   │   │   │   114.2284708,                               │ │
│ │               │   │   │   │   112.52936415                               │ │
│ │               │   │   │   ],                                             │ │
│ │               │   │   │   'std': [                                       │ │
│ │               │   │   │   │   42.12451161,                               │ │
│ │               │   │   │   │   39.52149692,                               │ │
│ │               │   │   │   │   42.81161886                                │ │
│ │               │   │   │   ]                                              │ │
│ │               │   │   },                                                 │ │
│ │               │   │   'DataCentric': {                                   │ │
│ │               │   │   │   'mean': [                                      │ │
│ │               │   │   │   │   72.74413315,                               │ │
│ │               │   │   │   │   99.76137101,                               │ │
│ │               │   │   │   │   82.70024275                                │ │
│ │               │   │   │   ],                                             │ │
│ │               │   │   │   'std': [                                       │ │
│ │               │   │   │   │   36.28290664,                               │ │
│ │               │   │   │   │   34.82507359,                               │ │
│ │               │   │   │   │   41.48902725                                │ │
│ │               │   │   │   ]                                              │ │
│ │               │   │   }                                                  │ │
│ │               │   },                                                     │ │
│ │               │   'teacher_model': {                                     │ │
│ │               │   │   'encoder_name': 'resnet34',                        │ │
│ │               │   │   'encoder_weights': 'imagenet',                     │ │
│ │               │   │   'in_channels': 3,                                  │ │
│ │               │   │   'out_channels': 1,                                 │ │
│ │               │   │   'learning_rate': '1e-3',                           │ │
│ │               │   │   'checkpoint_dir': 'checkpoints/',                  │ │
│ │               │   │   'checkpoint_name': 'best_teacher'                  │ │
│ │               │   },                                                     │ │
│ │               │   'student_model': {                                     │ │
│ │               │   │   'encoder_name': 'resnet34',                        │ │
│ │               │   │   'encoder_weights': None,                           │ │
│ │               │   │   'in_channels': 3,                                  │ │
│ │               │   │   'out_channels': 1,                                 │ │
│ │               │   │   'learning_rate': '1e-4',                           │ │
│ │               │   │   'checkpoint_dir': 'checkpoints/',                  │ │
│ │               │   │   'checkpoint_name': 'best_student'                  │ │
│ │               │   },                                                     │ │
│ │               │   'knowledge_distillation': {                            │ │
│ │               │   │   'temperature': 3.0,                                │ │
│ │               │   │   'alpha': 0.75,                                     │ │
│ │               │   │   'beta': 0.25                                       │ │
│ │               │   },                                                     │ │
│ │               │   'trainer': {                                           │ │
│ │               │   │   'wandb_project': 'teacher_student',                │ │
│ │               │   │   'experiment_name': 'teacher_model',                │ │
│ │               │   │   'strategy': 'ddp',                                 │ │
│ │               │   │   'accelerator': 'gpu',                              │ │
│ │               │   │   'precision': '16-mixed',                           │ │
│ │               │   │   'max_epochs': 50,                                  │ │
│ │               │   │   'log_every_n_steps': 50,                           │ │
│ │               │   │   'early_stopping': {                                │ │
│ │               │   │   │   'enabled': True,                               │ │
│ │               │   │   │   'patience': 10,                                │ │
│ │               │   │   │   'monitor': 'val_loss',                         │ │
│ │               │   │   │   'mode': 'min'                                  │ │
│ │               │   │   },                                                 │ │
│ │               │   │   'checkpoint_callback': {                           │ │
│ │               │   │   │   'monitor': 'val_loss',                         │ │
│ │               │   │   │   'mode': 'min',                                 │ │
│ │               │   │   │   'save_top_k': 1                                │ │
│ │               │   │   }                                                  │ │
│ │               │   }                                                      │ │
│ │               }                                                          │ │
│ │ config_path = 'config.yaml'                                              │ │
│ │       model = 'teacher'                                                  │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/projects/Noisy-Student/trainer.py:82 in train_teacher            │
│                                                                              │
│    79 │   trainer.fit(teacher_model, clean_dataloader)                       │
│    80 │                                                                      │
│    81 │   # Test teacher model                                               │
│ ❱  82 │   trainer.test(teacher_model, clean_dataloader, ckpt_path="best")    │
│    83                                                                        │
│    84                                                                        │
│    85 # Training Student Model                                               │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │           batch_size = 16                                                │ │
│ │            callbacks = [                                                 │ │
│ │                        │                                                 │ │
│ │                        <pytorch_lightning.callbacks.early_stopping.Earl… │ │
│ │                        object at 0x7f5033303fa0>,                        │ │
│ │                        │                                                 │ │
│ │                        <pytorch_lightning.callbacks.model_checkpoint.Mo… │ │
│ │                        object at 0x7f5033303ee0>,                        │ │
│ │                        │                                                 │ │
│ │                        <pytorch_lightning.callbacks.progress.tqdm_progr… │ │
│ │                        object at 0x7f5027b59570>,                        │ │
│ │                        │                                                 │ │
│ │                        <pytorch_lightning.callbacks.model_summary.Model… │ │
│ │                        object at 0x7f5027b59540>                         │ │
│ │                        ]                                                 │ │
│ │           checkpoint = <pytorch_lightning.callbacks.model_checkpoint.Mo… │ │
│ │                        object at 0x7f5033303ee0>                         │ │
│ │    checkpoint_params = {                                                 │ │
│ │                        │   'monitor': 'val_loss',                        │ │
│ │                        │   'mode': 'min',                                │ │
│ │                        │   'save_top_k': 1                               │ │
│ │                        }                                                 │ │
│ │     clean_dataloader = <dataloader.WHUDataModule object at               │ │
│ │                        0x7f5027b580a0>                                   │ │
│ │        CLEAN_DATASET = PosixPath('/media/tidop/Datos_4TB/databases/whu') │ │
│ │               config = {                                                 │ │
│ │                        │   'device': 'cuda',                             │ │
│ │                        │   'data': {                                     │ │
│ │                        │   │   'batch_size': 16,                         │ │
│ │                        │   │   'num_workers': 16,                        │ │
│ │                        │   │   'whu_path':                               │ │
│ │                        '/media/tidop/Datos_4TB/databases/whu',           │ │
│ │                        │   │   'datacentric_image_path':                 │ │
│ │                        '/media/tidop/Datos_4TB/databases/kaggle/dataset… │ │
│ │                        │   │   'label_noisy_path':                       │ │
│ │                        '/media/tidop/Datos_4TB/databases/kaggle/dataset… │ │
│ │                        │   │   'teacher_output_path':                    │ │
│ │                        '/media/tidop/Datos_4TB/databases/kaggle/dataset… │ │
│ │                        │   },                                            │ │
│ │                        │   'Normalize': {                                │ │
│ │                        │   │   'apply': True,                            │ │
│ │                        │   │   'WHU': {                                  │ │
│ │                        │   │   │   'mean': [                             │ │
│ │                        │   │   │   │   105.34253814,                     │ │
│ │                        │   │   │   │   114.2284708,                      │ │
│ │                        │   │   │   │   112.52936415                      │ │
│ │                        │   │   │   ],                                    │ │
│ │                        │   │   │   'std': [                              │ │
│ │                        │   │   │   │   42.12451161,                      │ │
│ │                        │   │   │   │   39.52149692,                      │ │
│ │                        │   │   │   │   42.81161886                       │ │
│ │                        │   │   │   ]                                     │ │
│ │                        │   │   },                                        │ │
│ │                        │   │   'DataCentric': {                          │ │
│ │                        │   │   │   'mean': [                             │ │
│ │                        │   │   │   │   72.74413315,                      │ │
│ │                        │   │   │   │   99.76137101,                      │ │
│ │                        │   │   │   │   82.70024275                       │ │
│ │                        │   │   │   ],                                    │ │
│ │                        │   │   │   'std': [                              │ │
│ │                        │   │   │   │   36.28290664,                      │ │
│ │                        │   │   │   │   34.82507359,                      │ │
│ │                        │   │   │   │   41.48902725                       │ │
│ │                        │   │   │   ]                                     │ │
│ │                        │   │   }                                         │ │
│ │                        │   },                                            │ │
│ │                        │   'teacher_model': {                            │ │
│ │                        │   │   'encoder_name': 'resnet34',               │ │
│ │                        │   │   'encoder_weights': 'imagenet',            │ │
│ │                        │   │   'in_channels': 3,                         │ │
│ │                        │   │   'out_channels': 1,                        │ │
│ │                        │   │   'learning_rate': '1e-3',                  │ │
│ │                        │   │   'checkpoint_dir': 'checkpoints/',         │ │
│ │                        │   │   'checkpoint_name': 'best_teacher'         │ │
│ │                        │   },                                            │ │
│ │                        │   'student_model': {                            │ │
│ │                        │   │   'encoder_name': 'resnet34',               │ │
│ │                        │   │   'encoder_weights': None,                  │ │
│ │                        │   │   'in_channels': 3,                         │ │
│ │                        │   │   'out_channels': 1,                        │ │
│ │                        │   │   'learning_rate': '1e-4',                  │ │
│ │                        │   │   'checkpoint_dir': 'checkpoints/',         │ │
│ │                        │   │   'checkpoint_name': 'best_student'         │ │
│ │                        │   },                                            │ │
│ │                        │   'knowledge_distillation': {                   │ │
│ │                        │   │   'temperature': 3.0,                       │ │
│ │                        │   │   'alpha': 0.75,                            │ │
│ │                        │   │   'beta': 0.25                              │ │
│ │                        │   },                                            │ │
│ │                        │   'trainer': {                                  │ │
│ │                        │   │   'wandb_project': 'teacher_student',       │ │
│ │                        │   │   'experiment_name': 'teacher_model',       │ │
│ │                        │   │   'strategy': 'ddp',                        │ │
│ │                        │   │   'accelerator': 'gpu',                     │ │
│ │                        │   │   'precision': '16-mixed',                  │ │
│ │                        │   │   'max_epochs': 50,                         │ │
│ │                        │   │   'log_every_n_steps': 50,                  │ │
│ │                        │   │   'early_stopping': {                       │ │
│ │                        │   │   │   'enabled': True,                      │ │
│ │                        │   │   │   'patience': 10,                       │ │
│ │                        │   │   │   'monitor': 'val_loss',                │ │
│ │                        │   │   │   'mode': 'min'                         │ │
│ │                        │   │   },                                        │ │
│ │                        │   │   'checkpoint_callback': {                  │ │
│ │                        │   │   │   'monitor': 'val_loss',                │ │
│ │                        │   │   │   'mode': 'min',                        │ │
│ │                        │   │   │   'save_top_k': 1                       │ │
│ │                        │   │   }                                         │ │
│ │                        │   }                                             │ │
│ │                        }                                                 │ │
│ │    early_stop_params = {                                                 │ │
│ │                        │   'enabled': True,                              │ │
│ │                        │   'patience': 10,                               │ │
│ │                        │   'monitor': 'val_loss',                        │ │
│ │                        │   'mode': 'min'                                 │ │
│ │                        }                                                 │ │
│ │       early_stopping = <pytorch_lightning.callbacks.early_stopping.Earl… │ │
│ │                        object at 0x7f5033303fa0>                         │ │
│ │      experiment_name = 'teacher_model'                                   │ │
│ │             mean_whu = [105.34253814, 114.2284708, 112.52936415]         │ │
│ │          num_workers = 16                                                │ │
│ │         project_name = 'teacher_student'                                 │ │
│ │              std_whu = [42.12451161, 39.52149692, 42.81161886]           │ │
│ │        teacher_model = TeacherUNetModel(                                 │ │
│ │                          (model): Unet(                                  │ │
│ │                        │   (encoder): ResNetEncoder(                     │ │
│ │                        │     (conv1): Conv2d(3, 64, kernel_size=(7, 7),  │ │
│ │                        stride=(2, 2), padding=(3, 3), bias=False)        │ │
│ │                        │     (bn1): BatchNorm2d(64, eps=1e-05,           │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │     (relu): ReLU(inplace=True)                  │ │
│ │                        │     (maxpool): MaxPool2d(kernel_size=3,         │ │
│ │                        stride=2, padding=1, dilation=1, ceil_mode=False) │ │
│ │                        │     (layer1): Sequential(                       │ │
│ │                        │   │   (0): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(64, 64, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │     (bn1): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(64, 64, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │     (bn2): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (1): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(64, 64, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │     (bn1): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(64, 64, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │     (bn2): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (2): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(64, 64, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │     (bn1): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(64, 64, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │     (bn2): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │     )                                           │ │
│ │                        │     (layer2): Sequential(                       │ │
│ │                        │   │   (0): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(64, 128,                │ │
│ │                        kernel_size=(3, 3), stride=(2, 2), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (downsample): Sequential(               │ │
│ │                        │   │   │   (0): Conv2d(64, 128, kernel_size=(1,  │ │
│ │                        1), stride=(2, 2), bias=False)                    │ │
│ │                        │   │   │   (1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (1): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (2): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (3): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(128, 128,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │     )                                           │ │
│ │                        │     (layer3): Sequential(                       │ │
│ │                        │   │   (0): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(128, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(2, 2), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (downsample): Sequential(               │ │
│ │                        │   │   │   (0): Conv2d(128, 256, kernel_size=(1, │ │
│ │                        1), stride=(2, 2), bias=False)                    │ │
│ │                        │   │   │   (1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (1): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (2): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (3): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (4): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (5): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(256, 256,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │     )                                           │ │
│ │                        │     (layer4): Sequential(                       │ │
│ │                        │   │   (0): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(256, 512,               │ │
│ │                        kernel_size=(3, 3), stride=(2, 2), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(512, 512,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (downsample): Sequential(               │ │
│ │                        │   │   │   (0): Conv2d(256, 512, kernel_size=(1, │ │
│ │                        1), stride=(2, 2), bias=False)                    │ │
│ │                        │   │   │   (1): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (1): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(512, 512,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(512, 512,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (2): BasicBlock(                          │ │
│ │                        │   │     (conv1): Conv2d(512, 512,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn1): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │     (relu): ReLU(inplace=True)              │ │
│ │                        │   │     (conv2): Conv2d(512, 512,               │ │
│ │                        kernel_size=(3, 3), stride=(1, 1), padding=(1,    │ │
│ │                        1), bias=False)                                   │ │
│ │                        │   │     (bn2): BatchNorm2d(512, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   )                                         │ │
│ │                        │     )                                           │ │
│ │                        │   )                                             │ │
│ │                        │   (decoder): UnetDecoder(                       │ │
│ │                        │     (center): Identity()                        │ │
│ │                        │     (blocks): ModuleList(                       │ │
│ │                        │   │   (0): DecoderBlock(                        │ │
│ │                        │   │     (conv1): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(768, 256, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention1): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (conv2): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(256, 256, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(256, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention2): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (1): DecoderBlock(                        │ │
│ │                        │   │     (conv1): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(384, 128, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention1): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (conv2): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(128, 128, kernel_size=(3, │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(128, eps=1e-05,      │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention2): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (2): DecoderBlock(                        │ │
│ │                        │   │     (conv1): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(192, 64, kernel_size=(3,  │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention1): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (conv2): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(64, 64, kernel_size=(3,   │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(64, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention2): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (3): DecoderBlock(                        │ │
│ │                        │   │     (conv1): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(128, 32, kernel_size=(3,  │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(32, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention1): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (conv2): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(32, 32, kernel_size=(3,   │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(32, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention2): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │   │   (4): DecoderBlock(                        │ │
│ │                        │   │     (conv1): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(32, 16, kernel_size=(3,   │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(16, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention1): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (conv2): Conv2dReLU(                    │ │
│ │                        │   │   │   (0): Conv2d(16, 16, kernel_size=(3,   │ │
│ │                        3), stride=(1, 1), padding=(1, 1), bias=False)    │ │
│ │                        │   │   │   (1): BatchNorm2d(16, eps=1e-05,       │ │
│ │                        momentum=0.1, affine=True,                        │ │
│ │                        track_running_stats=True)                         │ │
│ │                        │   │   │   (2): ReLU(inplace=True)               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │     (attention2): Attention(                │ │
│ │                        │   │   │   (attention): Identity()               │ │
│ │                        │   │     )                                       │ │
│ │                        │   │   )                                         │ │
│ │                        │     )                                           │ │
│ │                        │   )                                             │ │
│ │                        │   (segmentation_head): SegmentationHead(        │ │
│ │                        │     (0): Conv2d(16, 1, kernel_size=(3, 3),      │ │
│ │                        stride=(1, 1), padding=(1, 1))                    │ │
│ │                        │     (1): Identity()                             │ │
│ │                        │     (2): Activation(                            │ │
│ │                        │   │   (activation): Identity()                  │ │
│ │                        │     )                                           │ │
│ │                        │   )                                             │ │
│ │                          )                                               │ │
│ │                          (loss): BCEWithLogitsLoss()                     │ │
│ │                          (train_f1): BinaryF1Score()                     │ │
│ │                          (train_iou): BinaryJaccardIndex()               │ │
│ │                          (train_precision): BinaryPrecision()            │ │
│ │                          (train_recall): BinaryRecall()                  │ │
│ │                          (val_f1): BinaryF1Score()                       │ │
│ │                          (val_iou): BinaryJaccardIndex()                 │ │
│ │                          (val_precision): BinaryPrecision()              │ │
│ │                          (val_recall): BinaryRecall()                    │ │
│ │                          (test_f1): BinaryF1Score()                      │ │
│ │                          (test_iou): BinaryJaccardIndex()                │ │
│ │                          (test_precision): BinaryPrecision()             │ │
│ │                          (test_recall): BinaryRecall()                   │ │
│ │                        )                                                 │ │
│ │ teacher_wandb_logger = <pytorch_lightning.loggers.wandb.WandbLogger      │ │
│ │                        object at 0x7f5033303e50>                         │ │
│ │              trainer = <pytorch_lightning.trainer.trainer.Trainer object │ │
│ │                        at 0x7f502876c550>                                │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/trainer/trainer.py:748 in test                                │
│                                                                              │
│    745 │   │   self.state.fn = TrainerFn.TESTING                             │
│    746 │   │   self.state.status = TrainerStatus.RUNNING                     │
│    747 │   │   self.testing = True                                           │
│ ❱  748 │   │   return call._call_and_handle_interrupt(                       │
│    749 │   │   │   self, self._test_impl, model, dataloaders, ckpt_path, ver │
│    750 │   │   )                                                             │
│    751                                                                       │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │   ckpt_path = 'best'                                                     │ │
│ │ dataloaders = <dataloader.WHUDataModule object at 0x7f5027b580a0>        │ │
│ │  datamodule = None                                                       │ │
│ │       model = TeacherUNetModel(                                          │ │
│ │                 (model): Unet(                                           │ │
│ │               │   (encoder): ResNetEncoder(                              │ │
│ │               │     (conv1): Conv2d(3, 64, kernel_size=(7, 7),           │ │
│ │               stride=(2, 2), padding=(3, 3), bias=False)                 │ │
│ │               │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,      │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │     (relu): ReLU(inplace=True)                           │ │
│ │               │     (maxpool): MaxPool2d(kernel_size=3, stride=2,        │ │
│ │               padding=1, dilation=1, ceil_mode=False)                    │ │
│ │               │     (layer1): Sequential(                                │ │
│ │               │   │   (0): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (1): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (2): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │     )                                                    │ │
│ │               │     (layer2): Sequential(                                │ │
│ │               │   │   (0): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(64, 128, kernel_size=(3, 3),     │ │
│ │               stride=(2, 2), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (downsample): Sequential(                        │ │
│ │               │   │   │   (0): Conv2d(64, 128, kernel_size=(1, 1),       │ │
│ │               stride=(2, 2), bias=False)                                 │ │
│ │               │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (1): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (2): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (3): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │     )                                                    │ │
│ │               │     (layer3): Sequential(                                │ │
│ │               │   │   (0): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(128, 256, kernel_size=(3, 3),    │ │
│ │               stride=(2, 2), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (downsample): Sequential(                        │ │
│ │               │   │   │   (0): Conv2d(128, 256, kernel_size=(1, 1),      │ │
│ │               stride=(2, 2), bias=False)                                 │ │
│ │               │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (1): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (2): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (3): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (4): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (5): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │     )                                                    │ │
│ │               │     (layer4): Sequential(                                │ │
│ │               │   │   (0): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(256, 512, kernel_size=(3, 3),    │ │
│ │               stride=(2, 2), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (downsample): Sequential(                        │ │
│ │               │   │   │   (0): Conv2d(256, 512, kernel_size=(1, 1),      │ │
│ │               stride=(2, 2), bias=False)                                 │ │
│ │               │   │   │   (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (1): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (2): BasicBlock(                                   │ │
│ │               │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │     (relu): ReLU(inplace=True)                       │ │
│ │               │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),    │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   )                                                  │ │
│ │               │     )                                                    │ │
│ │               │   )                                                      │ │
│ │               │   (decoder): UnetDecoder(                                │ │
│ │               │     (center): Identity()                                 │ │
│ │               │     (blocks): ModuleList(                                │ │
│ │               │   │   (0): DecoderBlock(                                 │ │
│ │               │   │     (conv1): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(768, 256, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention1): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (conv2): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention2): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (1): DecoderBlock(                                 │ │
│ │               │   │     (conv1): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(384, 128, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention1): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (conv2): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention2): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (2): DecoderBlock(                                 │ │
│ │               │   │     (conv1): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(192, 64, kernel_size=(3, 3),       │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention1): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (conv2): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention2): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (3): DecoderBlock(                                 │ │
│ │               │   │     (conv1): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(128, 32, kernel_size=(3, 3),       │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention1): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (conv2): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(32, 32, kernel_size=(3, 3),        │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention2): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │   │   (4): DecoderBlock(                                 │ │
│ │               │   │     (conv1): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(32, 16, kernel_size=(3, 3),        │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention1): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (conv2): Conv2dReLU(                             │ │
│ │               │   │   │   (0): Conv2d(16, 16, kernel_size=(3, 3),        │ │
│ │               stride=(1, 1), padding=(1, 1), bias=False)                 │ │
│ │               │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,  │ │
│ │               affine=True, track_running_stats=True)                     │ │
│ │               │   │   │   (2): ReLU(inplace=True)                        │ │
│ │               │   │     )                                                │ │
│ │               │   │     (attention2): Attention(                         │ │
│ │               │   │   │   (attention): Identity()                        │ │
│ │               │   │     )                                                │ │
│ │               │   │   )                                                  │ │
│ │               │     )                                                    │ │
│ │               │   )                                                      │ │
│ │               │   (segmentation_head): SegmentationHead(                 │ │
│ │               │     (0): Conv2d(16, 1, kernel_size=(3, 3), stride=(1,    │ │
│ │               1), padding=(1, 1))                                        │ │
│ │               │     (1): Identity()                                      │ │
│ │               │     (2): Activation(                                     │ │
│ │               │   │   (activation): Identity()                           │ │
│ │               │     )                                                    │ │
│ │               │   )                                                      │ │
│ │                 )                                                        │ │
│ │                 (loss): BCEWithLogitsLoss()                              │ │
│ │                 (train_f1): BinaryF1Score()                              │ │
│ │                 (train_iou): BinaryJaccardIndex()                        │ │
│ │                 (train_precision): BinaryPrecision()                     │ │
│ │                 (train_recall): BinaryRecall()                           │ │
│ │                 (val_f1): BinaryF1Score()                                │ │
│ │                 (val_iou): BinaryJaccardIndex()                          │ │
│ │                 (val_precision): BinaryPrecision()                       │ │
│ │                 (val_recall): BinaryRecall()                             │ │
│ │                 (test_f1): BinaryF1Score()                               │ │
│ │                 (test_iou): BinaryJaccardIndex()                         │ │
│ │                 (test_precision): BinaryPrecision()                      │ │
│ │                 (test_recall): BinaryRecall()                            │ │
│ │               )                                                          │ │
│ │        self = <pytorch_lightning.trainer.trainer.Trainer object at       │ │
│ │               0x7f502876c550>                                            │ │
│ │     verbose = True                                                       │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/trainer/call.py:46 in _call_and_handle_interrupt              │
│                                                                              │
│    43 │   """                                                                │
│    44 │   try:                                                               │
│    45 │   │   if trainer.strategy.launcher is not None:                      │
│ ❱  46 │   │   │   return trainer.strategy.launcher.launch(trainer_fn, *args, │
│    47 │   │   return trainer_fn(*args, **kwargs)                             │
│    48 │                                                                      │
│    49 │   except _TunerExitException:                                        │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │       args = (                                                           │ │
│ │              │   TeacherUNetModel(                                       │ │
│ │                (model): Unet(                                            │ │
│ │              │   (encoder): ResNetEncoder(                               │ │
│ │              │     (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, │ │
│ │              2), padding=(3, 3), bias=False)                             │ │
│ │              │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,       │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │     (relu): ReLU(inplace=True)                            │ │
│ │              │     (maxpool): MaxPool2d(kernel_size=3, stride=2,         │ │
│ │              padding=1, dilation=1, ceil_mode=False)                     │ │
│ │              │     (layer1): Sequential(                                 │ │
│ │              │   │   (0): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (1): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (2): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │     )                                                     │ │
│ │              │     (layer2): Sequential(                                 │ │
│ │              │   │   (0): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(64, 128, kernel_size=(3, 3),      │ │
│ │              stride=(2, 2), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (downsample): Sequential(                         │ │
│ │              │   │   │   (0): Conv2d(64, 128, kernel_size=(1, 1),        │ │
│ │              stride=(2, 2), bias=False)                                  │ │
│ │              │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (1): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (2): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (3): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │     )                                                     │ │
│ │              │     (layer3): Sequential(                                 │ │
│ │              │   │   (0): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(128, 256, kernel_size=(3, 3),     │ │
│ │              stride=(2, 2), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (downsample): Sequential(                         │ │
│ │              │   │   │   (0): Conv2d(128, 256, kernel_size=(1, 1),       │ │
│ │              stride=(2, 2), bias=False)                                  │ │
│ │              │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (1): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (2): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (3): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (4): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (5): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │     )                                                     │ │
│ │              │     (layer4): Sequential(                                 │ │
│ │              │   │   (0): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(256, 512, kernel_size=(3, 3),     │ │
│ │              stride=(2, 2), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (downsample): Sequential(                         │ │
│ │              │   │   │   (0): Conv2d(256, 512, kernel_size=(1, 1),       │ │
│ │              stride=(2, 2), bias=False)                                  │ │
│ │              │   │   │   (1): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (1): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (2): BasicBlock(                                    │ │
│ │              │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │     (relu): ReLU(inplace=True)                        │ │
│ │              │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),     │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   )                                                   │ │
│ │              │     )                                                     │ │
│ │              │   )                                                       │ │
│ │              │   (decoder): UnetDecoder(                                 │ │
│ │              │     (center): Identity()                                  │ │
│ │              │     (blocks): ModuleList(                                 │ │
│ │              │   │   (0): DecoderBlock(                                  │ │
│ │              │   │     (conv1): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(768, 256, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention1): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (conv2): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention2): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (1): DecoderBlock(                                  │ │
│ │              │   │     (conv1): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(384, 128, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention1): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (conv2): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,  │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention2): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (2): DecoderBlock(                                  │ │
│ │              │   │     (conv1): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(192, 64, kernel_size=(3, 3),        │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention1): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (conv2): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention2): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (3): DecoderBlock(                                  │ │
│ │              │   │     (conv1): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(128, 32, kernel_size=(3, 3),        │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention1): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (conv2): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(32, 32, kernel_size=(3, 3),         │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention2): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │   │   (4): DecoderBlock(                                  │ │
│ │              │   │     (conv1): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(32, 16, kernel_size=(3, 3),         │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention1): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (conv2): Conv2dReLU(                              │ │
│ │              │   │   │   (0): Conv2d(16, 16, kernel_size=(3, 3),         │ │
│ │              stride=(1, 1), padding=(1, 1), bias=False)                  │ │
│ │              │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,   │ │
│ │              affine=True, track_running_stats=True)                      │ │
│ │              │   │   │   (2): ReLU(inplace=True)                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │     (attention2): Attention(                          │ │
│ │              │   │   │   (attention): Identity()                         │ │
│ │              │   │     )                                                 │ │
│ │              │   │   )                                                   │ │
│ │              │     )                                                     │ │
│ │              │   )                                                       │ │
│ │              │   (segmentation_head): SegmentationHead(                  │ │
│ │              │     (0): Conv2d(16, 1, kernel_size=(3, 3), stride=(1, 1), │ │
│ │              padding=(1, 1))                                             │ │
│ │              │     (1): Identity()                                       │ │
│ │              │     (2): Activation(                                      │ │
│ │              │   │   (activation): Identity()                            │ │
│ │              │     )                                                     │ │
│ │              │   )                                                       │ │
│ │                )                                                         │ │
│ │                (loss): BCEWithLogitsLoss()                               │ │
│ │                (train_f1): BinaryF1Score()                               │ │
│ │                (train_iou): BinaryJaccardIndex()                         │ │
│ │                (train_precision): BinaryPrecision()                      │ │
│ │                (train_recall): BinaryRecall()                            │ │
│ │                (val_f1): BinaryF1Score()                                 │ │
│ │                (val_iou): BinaryJaccardIndex()                           │ │
│ │                (val_precision): BinaryPrecision()                        │ │
│ │                (val_recall): BinaryRecall()                              │ │
│ │                (test_f1): BinaryF1Score()                                │ │
│ │                (test_iou): BinaryJaccardIndex()                          │ │
│ │                (test_precision): BinaryPrecision()                       │ │
│ │                (test_recall): BinaryRecall()                             │ │
│ │              ),                                                          │ │
│ │              │   <dataloader.WHUDataModule object at 0x7f5027b580a0>,    │ │
│ │              │   'best',                                                 │ │
│ │              │   True,                                                   │ │
│ │              │   None                                                    │ │
│ │              )                                                           │ │
│ │     kwargs = {}                                                          │ │
│ │    trainer = <pytorch_lightning.trainer.trainer.Trainer object at        │ │
│ │              0x7f502876c550>                                             │ │
│ │ trainer_fn = <bound method Trainer._test_impl of                         │ │
│ │              <pytorch_lightning.trainer.trainer.Trainer object at        │ │
│ │              0x7f502876c550>>                                            │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/strategies/launchers/subprocess_script.py:105 in launch       │
│                                                                              │
│   102 │   │   │   _launch_process_observer(self.procs)                       │
│   103 │   │                                                                  │
│   104 │   │   _set_num_threads_if_needed(num_processes=self.num_processes)   │
│ ❱ 105 │   │   return function(*args, **kwargs)                               │
│   106 │                                                                      │
│   107 │   @override                                                          │
│   108 │   def kill(self, signum: _SIGNUM) -> None:                           │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │     args = (                                                             │ │
│ │            │   TeacherUNetModel(                                         │ │
│ │              (model): Unet(                                              │ │
│ │            │   (encoder): ResNetEncoder(                                 │ │
│ │            │     (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2,   │ │
│ │            2), padding=(3, 3), bias=False)                               │ │
│ │            │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,         │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │     (relu): ReLU(inplace=True)                              │ │
│ │            │     (maxpool): MaxPool2d(kernel_size=3, stride=2,           │ │
│ │            padding=1, dilation=1, ceil_mode=False)                       │ │
│ │            │     (layer1): Sequential(                                   │ │
│ │            │   │   (0): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (1): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (2): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │     )                                                       │ │
│ │            │     (layer2): Sequential(                                   │ │
│ │            │   │   (0): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(64, 128, kernel_size=(3, 3),        │ │
│ │            stride=(2, 2), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (downsample): Sequential(                           │ │
│ │            │   │   │   (0): Conv2d(64, 128, kernel_size=(1, 1),          │ │
│ │            stride=(2, 2), bias=False)                                    │ │
│ │            │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (1): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (2): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (3): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │     )                                                       │ │
│ │            │     (layer3): Sequential(                                   │ │
│ │            │   │   (0): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(128, 256, kernel_size=(3, 3),       │ │
│ │            stride=(2, 2), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (downsample): Sequential(                           │ │
│ │            │   │   │   (0): Conv2d(128, 256, kernel_size=(1, 1),         │ │
│ │            stride=(2, 2), bias=False)                                    │ │
│ │            │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (1): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (2): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (3): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (4): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (5): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │     )                                                       │ │
│ │            │     (layer4): Sequential(                                   │ │
│ │            │   │   (0): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(256, 512, kernel_size=(3, 3),       │ │
│ │            stride=(2, 2), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (downsample): Sequential(                           │ │
│ │            │   │   │   (0): Conv2d(256, 512, kernel_size=(1, 1),         │ │
│ │            stride=(2, 2), bias=False)                                    │ │
│ │            │   │   │   (1): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (1): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (2): BasicBlock(                                      │ │
│ │            │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │     (relu): ReLU(inplace=True)                          │ │
│ │            │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),       │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   )                                                     │ │
│ │            │     )                                                       │ │
│ │            │   )                                                         │ │
│ │            │   (decoder): UnetDecoder(                                   │ │
│ │            │     (center): Identity()                                    │ │
│ │            │     (blocks): ModuleList(                                   │ │
│ │            │   │   (0): DecoderBlock(                                    │ │
│ │            │   │     (conv1): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(768, 256, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention1): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (conv2): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(256, 256, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention2): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (1): DecoderBlock(                                    │ │
│ │            │   │     (conv1): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(384, 128, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention1): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (conv2): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(128, 128, kernel_size=(3, 3),         │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,    │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention2): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (2): DecoderBlock(                                    │ │
│ │            │   │     (conv1): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(192, 64, kernel_size=(3, 3),          │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention1): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (conv2): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(64, 64, kernel_size=(3, 3),           │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention2): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (3): DecoderBlock(                                    │ │
│ │            │   │     (conv1): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(128, 32, kernel_size=(3, 3),          │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention1): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (conv2): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(32, 32, kernel_size=(3, 3),           │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention2): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │   │   (4): DecoderBlock(                                    │ │
│ │            │   │     (conv1): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(32, 16, kernel_size=(3, 3),           │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention1): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (conv2): Conv2dReLU(                                │ │
│ │            │   │   │   (0): Conv2d(16, 16, kernel_size=(3, 3),           │ │
│ │            stride=(1, 1), padding=(1, 1), bias=False)                    │ │
│ │            │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,     │ │
│ │            affine=True, track_running_stats=True)                        │ │
│ │            │   │   │   (2): ReLU(inplace=True)                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │     (attention2): Attention(                            │ │
│ │            │   │   │   (attention): Identity()                           │ │
│ │            │   │     )                                                   │ │
│ │            │   │   )                                                     │ │
│ │            │     )                                                       │ │
│ │            │   )                                                         │ │
│ │            │   (segmentation_head): SegmentationHead(                    │ │
│ │            │     (0): Conv2d(16, 1, kernel_size=(3, 3), stride=(1, 1),   │ │
│ │            padding=(1, 1))                                               │ │
│ │            │     (1): Identity()                                         │ │
│ │            │     (2): Activation(                                        │ │
│ │            │   │   (activation): Identity()                              │ │
│ │            │     )                                                       │ │
│ │            │   )                                                         │ │
│ │              )                                                           │ │
│ │              (loss): BCEWithLogitsLoss()                                 │ │
│ │              (train_f1): BinaryF1Score()                                 │ │
│ │              (train_iou): BinaryJaccardIndex()                           │ │
│ │              (train_precision): BinaryPrecision()                        │ │
│ │              (train_recall): BinaryRecall()                              │ │
│ │              (val_f1): BinaryF1Score()                                   │ │
│ │              (val_iou): BinaryJaccardIndex()                             │ │
│ │              (val_precision): BinaryPrecision()                          │ │
│ │              (val_recall): BinaryRecall()                                │ │
│ │              (test_f1): BinaryF1Score()                                  │ │
│ │              (test_iou): BinaryJaccardIndex()                            │ │
│ │              (test_precision): BinaryPrecision()                         │ │
│ │              (test_recall): BinaryRecall()                               │ │
│ │            ),                                                            │ │
│ │            │   <dataloader.WHUDataModule object at 0x7f5027b580a0>,      │ │
│ │            │   'best',                                                   │ │
│ │            │   True,                                                     │ │
│ │            │   None                                                      │ │
│ │            )                                                             │ │
│ │ function = <bound method Trainer._test_impl of                           │ │
│ │            <pytorch_lightning.trainer.trainer.Trainer object at          │ │
│ │            0x7f502876c550>>                                              │ │
│ │   kwargs = {}                                                            │ │
│ │     self = <pytorch_lightning.strategies.launchers.subprocess_script._S… │ │
│ │            object at 0x7f50364e7550>                                     │ │
│ │  trainer = <pytorch_lightning.trainer.trainer.Trainer object at          │ │
│ │            0x7f502876c550>                                               │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/trainer/trainer.py:788 in _test_impl                          │
│                                                                              │
│    785 │   │   ckpt_path = self._checkpoint_connector._select_ckpt_path(     │
│    786 │   │   │   self.state.fn, ckpt_path, model_provided=model_provided,  │
│    787 │   │   )                                                             │
│ ❱  788 │   │   results = self._run(model, ckpt_path=ckpt_path)               │
│    789 │   │   # remove the tensors from the test results                    │
│    790 │   │   results = convert_tensors_to_scalars(results)                 │
│    791                                                                       │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │      ckpt_path = '/home/tidop/projects/Noisy-Student/checkpoints/best_t… │ │
│ │    dataloaders = None                                                    │ │
│ │     datamodule = <dataloader.WHUDataModule object at 0x7f5027b580a0>     │ │
│ │          model = TeacherUNetModel(                                       │ │
│ │                    (model): Unet(                                        │ │
│ │                  │   (encoder): ResNetEncoder(                           │ │
│ │                  │     (conv1): Conv2d(3, 64, kernel_size=(7, 7),        │ │
│ │                  stride=(2, 2), padding=(3, 3), bias=False)              │ │
│ │                  │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,   │ │
│ │                  affine=True, track_running_stats=True)                  │ │
│ │                  │     (relu): ReLU(inplace=True)                        │ │
│ │                  │     (maxpool): MaxPool2d(kernel_size=3, stride=2,     │ │
│ │                  padding=1, dilation=1, ceil_mode=False)                 │ │
│ │                  │     (layer1): Sequential(                             │ │
│ │                  │   │   (0): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (1): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (2): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │     )                                                 │ │
│ │                  │     (layer2): Sequential(                             │ │
│ │                  │   │   (0): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(64, 128, kernel_size=(3, 3),  │ │
│ │                  stride=(2, 2), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (downsample): Sequential(                     │ │
│ │                  │   │   │   (0): Conv2d(64, 128, kernel_size=(1, 1),    │ │
│ │                  stride=(2, 2), bias=False)                              │ │
│ │                  │   │   │   (1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (1): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (2): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (3): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │     )                                                 │ │
│ │                  │     (layer3): Sequential(                             │ │
│ │                  │   │   (0): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(128, 256, kernel_size=(3, 3), │ │
│ │                  stride=(2, 2), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (downsample): Sequential(                     │ │
│ │                  │   │   │   (0): Conv2d(128, 256, kernel_size=(1, 1),   │ │
│ │                  stride=(2, 2), bias=False)                              │ │
│ │                  │   │   │   (1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (1): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (2): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (3): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (4): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (5): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │     )                                                 │ │
│ │                  │     (layer4): Sequential(                             │ │
│ │                  │   │   (0): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(256, 512, kernel_size=(3, 3), │ │
│ │                  stride=(2, 2), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (downsample): Sequential(                     │ │
│ │                  │   │   │   (0): Conv2d(256, 512, kernel_size=(1, 1),   │ │
│ │                  stride=(2, 2), bias=False)                              │ │
│ │                  │   │   │   (1): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (1): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (2): BasicBlock(                                │ │
│ │                  │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn1): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │     (relu): ReLU(inplace=True)                    │ │
│ │                  │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3), │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │     (bn2): BatchNorm2d(512, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   )                                               │ │
│ │                  │     )                                                 │ │
│ │                  │   )                                                   │ │
│ │                  │   (decoder): UnetDecoder(                             │ │
│ │                  │     (center): Identity()                              │ │
│ │                  │     (blocks): ModuleList(                             │ │
│ │                  │   │   (0): DecoderBlock(                              │ │
│ │                  │   │     (conv1): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(768, 256, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention1): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (conv2): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(256, 256, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(256, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention2): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (1): DecoderBlock(                              │ │
│ │                  │   │     (conv1): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(384, 128, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention1): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (conv2): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(128, 128, kernel_size=(3, 3),   │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(128, eps=1e-05,            │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention2): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (2): DecoderBlock(                              │ │
│ │                  │   │     (conv1): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(192, 64, kernel_size=(3, 3),    │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention1): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (conv2): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(64, 64, kernel_size=(3, 3),     │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(64, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention2): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (3): DecoderBlock(                              │ │
│ │                  │   │     (conv1): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(128, 32, kernel_size=(3, 3),    │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(32, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention1): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (conv2): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(32, 32, kernel_size=(3, 3),     │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(32, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention2): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │   │   (4): DecoderBlock(                              │ │
│ │                  │   │     (conv1): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(32, 16, kernel_size=(3, 3),     │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(16, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention1): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (conv2): Conv2dReLU(                          │ │
│ │                  │   │   │   (0): Conv2d(16, 16, kernel_size=(3, 3),     │ │
│ │                  stride=(1, 1), padding=(1, 1), bias=False)              │ │
│ │                  │   │   │   (1): BatchNorm2d(16, eps=1e-05,             │ │
│ │                  momentum=0.1, affine=True, track_running_stats=True)    │ │
│ │                  │   │   │   (2): ReLU(inplace=True)                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │     (attention2): Attention(                      │ │
│ │                  │   │   │   (attention): Identity()                     │ │
│ │                  │   │     )                                             │ │
│ │                  │   │   )                                               │ │
│ │                  │     )                                                 │ │
│ │                  │   )                                                   │ │
│ │                  │   (segmentation_head): SegmentationHead(              │ │
│ │                  │     (0): Conv2d(16, 1, kernel_size=(3, 3), stride=(1, │ │
│ │                  1), padding=(1, 1))                                     │ │
│ │                  │     (1): Identity()                                   │ │
│ │                  │     (2): Activation(                                  │ │
│ │                  │   │   (activation): Identity()                        │ │
│ │                  │     )                                                 │ │
│ │                  │   )                                                   │ │
│ │                    )                                                     │ │
│ │                    (loss): BCEWithLogitsLoss()                           │ │
│ │                    (train_f1): BinaryF1Score()                           │ │
│ │                    (train_iou): BinaryJaccardIndex()                     │ │
│ │                    (train_precision): BinaryPrecision()                  │ │
│ │                    (train_recall): BinaryRecall()                        │ │
│ │                    (val_f1): BinaryF1Score()                             │ │
│ │                    (val_iou): BinaryJaccardIndex()                       │ │
│ │                    (val_precision): BinaryPrecision()                    │ │
│ │                    (val_recall): BinaryRecall()                          │ │
│ │                    (test_f1): BinaryF1Score()                            │ │
│ │                    (test_iou): BinaryJaccardIndex()                      │ │
│ │                    (test_precision): BinaryPrecision()                   │ │
│ │                    (test_recall): BinaryRecall()                         │ │
│ │                  )                                                       │ │
│ │ model_provided = True                                                    │ │
│ │           self = <pytorch_lightning.trainer.trainer.Trainer object at    │ │
│ │                  0x7f502876c550>                                         │ │
│ │        verbose = True                                                    │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/trainer/trainer.py:950 in _run                                │
│                                                                              │
│    947 │   │   # check if we should delay restoring checkpoint till later    │
│    948 │   │   if not self.strategy.restore_checkpoint_after_setup:          │
│    949 │   │   │   log.debug(f"{self.__class__.__name__}: restoring module a │
│ ❱  950 │   │   │   self._checkpoint_connector._restore_modules_and_callbacks │
│    951 │   │                                                                 │
│    952 │   │   # reset logger connector                                      │
│    953 │   │   self._logger_connector.reset_results()                        │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ ckpt_path = '/home/tidop/projects/Noisy-Student/checkpoints/best_teache… │ │
│ │     model = TeacherUNetModel(                                            │ │
│ │               (model): Unet(                                             │ │
│ │             │   (encoder): ResNetEncoder(                                │ │
│ │             │     (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2,  │ │
│ │             2), padding=(3, 3), bias=False)                              │ │
│ │             │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,        │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │     (relu): ReLU(inplace=True)                             │ │
│ │             │     (maxpool): MaxPool2d(kernel_size=3, stride=2,          │ │
│ │             padding=1, dilation=1, ceil_mode=False)                      │ │
│ │             │     (layer1): Sequential(                                  │ │
│ │             │   │   (0): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (1): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (2): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(64, 64, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │     )                                                      │ │
│ │             │     (layer2): Sequential(                                  │ │
│ │             │   │   (0): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(64, 128, kernel_size=(3, 3),       │ │
│ │             stride=(2, 2), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (downsample): Sequential(                          │ │
│ │             │   │   │   (0): Conv2d(64, 128, kernel_size=(1, 1),         │ │
│ │             stride=(2, 2), bias=False)                                   │ │
│ │             │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (1): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (2): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (3): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(128, 128, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │     )                                                      │ │
│ │             │     (layer3): Sequential(                                  │ │
│ │             │   │   (0): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(128, 256, kernel_size=(3, 3),      │ │
│ │             stride=(2, 2), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (downsample): Sequential(                          │ │
│ │             │   │   │   (0): Conv2d(128, 256, kernel_size=(1, 1),        │ │
│ │             stride=(2, 2), bias=False)                                   │ │
│ │             │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (1): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (2): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (3): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (4): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (5): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(256, 256, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │     )                                                      │ │
│ │             │     (layer4): Sequential(                                  │ │
│ │             │   │   (0): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(256, 512, kernel_size=(3, 3),      │ │
│ │             stride=(2, 2), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (downsample): Sequential(                          │ │
│ │             │   │   │   (0): Conv2d(256, 512, kernel_size=(1, 1),        │ │
│ │             stride=(2, 2), bias=False)                                   │ │
│ │             │   │   │   (1): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (1): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (2): BasicBlock(                                     │ │
│ │             │   │     (conv1): Conv2d(512, 512, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │     (relu): ReLU(inplace=True)                         │ │
│ │             │   │     (conv2): Conv2d(512, 512, kernel_size=(3, 3),      │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │     (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   )                                                    │ │
│ │             │     )                                                      │ │
│ │             │   )                                                        │ │
│ │             │   (decoder): UnetDecoder(                                  │ │
│ │             │     (center): Identity()                                   │ │
│ │             │     (blocks): ModuleList(                                  │ │
│ │             │   │   (0): DecoderBlock(                                   │ │
│ │             │   │     (conv1): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(768, 256, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention1): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (conv2): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(256, 256, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(256, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention2): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (1): DecoderBlock(                                   │ │
│ │             │   │     (conv1): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(384, 128, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention1): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (conv2): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(128, 128, kernel_size=(3, 3),        │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(128, eps=1e-05, momentum=0.1,   │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention2): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (2): DecoderBlock(                                   │ │
│ │             │   │     (conv1): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(192, 64, kernel_size=(3, 3),         │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention1): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (conv2): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(64, 64, kernel_size=(3, 3),          │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(64, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention2): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (3): DecoderBlock(                                   │ │
│ │             │   │     (conv1): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(128, 32, kernel_size=(3, 3),         │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention1): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (conv2): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(32, 32, kernel_size=(3, 3),          │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(32, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention2): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │   │   (4): DecoderBlock(                                   │ │
│ │             │   │     (conv1): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(32, 16, kernel_size=(3, 3),          │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention1): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (conv2): Conv2dReLU(                               │ │
│ │             │   │   │   (0): Conv2d(16, 16, kernel_size=(3, 3),          │ │
│ │             stride=(1, 1), padding=(1, 1), bias=False)                   │ │
│ │             │   │   │   (1): BatchNorm2d(16, eps=1e-05, momentum=0.1,    │ │
│ │             affine=True, track_running_stats=True)                       │ │
│ │             │   │   │   (2): ReLU(inplace=True)                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │     (attention2): Attention(                           │ │
│ │             │   │   │   (attention): Identity()                          │ │
│ │             │   │     )                                                  │ │
│ │             │   │   )                                                    │ │
│ │             │     )                                                      │ │
│ │             │   )                                                        │ │
│ │             │   (segmentation_head): SegmentationHead(                   │ │
│ │             │     (0): Conv2d(16, 1, kernel_size=(3, 3), stride=(1, 1),  │ │
│ │             padding=(1, 1))                                              │ │
│ │             │     (1): Identity()                                        │ │
│ │             │     (2): Activation(                                       │ │
│ │             │   │   (activation): Identity()                             │ │
│ │             │     )                                                      │ │
│ │             │   )                                                        │ │
│ │               )                                                          │ │
│ │               (loss): BCEWithLogitsLoss()                                │ │
│ │               (train_f1): BinaryF1Score()                                │ │
│ │               (train_iou): BinaryJaccardIndex()                          │ │
│ │               (train_precision): BinaryPrecision()                       │ │
│ │               (train_recall): BinaryRecall()                             │ │
│ │               (val_f1): BinaryF1Score()                                  │ │
│ │               (val_iou): BinaryJaccardIndex()                            │ │
│ │               (val_precision): BinaryPrecision()                         │ │
│ │               (val_recall): BinaryRecall()                               │ │
│ │               (test_f1): BinaryF1Score()                                 │ │
│ │               (test_iou): BinaryJaccardIndex()                           │ │
│ │               (test_precision): BinaryPrecision()                        │ │
│ │               (test_recall): BinaryRecall()                              │ │
│ │             )                                                            │ │
│ │      self = <pytorch_lightning.trainer.trainer.Trainer object at         │ │
│ │             0x7f502876c550>                                              │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/trainer/connectors/checkpoint_connector.py:397 in             │
│ _restore_modules_and_callbacks                                               │
│                                                                              │
│   394 │                                                                      │
│   395 │   def _restore_modules_and_callbacks(self, checkpoint_path: Optional │
│   396 │   │   # restore modules after setup                                  │
│ ❱ 397 │   │   self.resume_start(checkpoint_path)                             │
│   398 │   │   self.restore_model()                                           │
│   399 │   │   self.restore_datamodule()                                      │
│   400 │   │   if self.trainer.state.fn == TrainerFn.FITTING:                 │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ checkpoint_path = '/home/tidop/projects/Noisy-Student/checkpoints/best_… │ │
│ │            self = <pytorch_lightning.trainer.connectors.checkpoint_conn… │ │
│ │                   object at 0x7f5027b59a20>                              │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/trainer/connectors/checkpoint_connector.py:79 in resume_start │
│                                                                              │
│    76 │   │                                                                  │
│    77 │   │   rank_zero_info(f"Restoring states from the checkpoint path at  │
│    78 │   │   with pl_legacy_patch():                                        │
│ ❱  79 │   │   │   loaded_checkpoint = self.trainer.strategy.load_checkpoint( │
│    80 │   │   self._loaded_checkpoint = _pl_migrate_checkpoint(loaded_checkp │
│    81 │                                                                      │
│    82 │   def _select_ckpt_path(                                             │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ checkpoint_path = '/home/tidop/projects/Noisy-Student/checkpoints/best_… │ │
│ │            self = <pytorch_lightning.trainer.connectors.checkpoint_conn… │ │
│ │                   object at 0x7f5027b59a20>                              │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/pyt │
│ orch_lightning/strategies/strategy.py:367 in load_checkpoint                 │
│                                                                              │
│   364 │                                                                      │
│   365 │   def load_checkpoint(self, checkpoint_path: _PATH) -> Dict[str, Any │
│   366 │   │   torch.cuda.empty_cache()                                       │
│ ❱ 367 │   │   return self.checkpoint_io.load_checkpoint(checkpoint_path)     │
│   368 │                                                                      │
│   369 │   def load_model_state_dict(self, checkpoint: Mapping[str, Any], str │
│   370 │   │   assert self.lightning_module is not None                       │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ checkpoint_path = '/home/tidop/projects/Noisy-Student/checkpoints/best_… │ │
│ │            self = <pytorch_lightning.strategies.ddp.DDPStrategy object   │ │
│ │                   at 0x7f502876c580>                                     │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/lig │
│ htning_fabric/plugins/io/torch_io.py:81 in load_checkpoint                   │
│                                                                              │
│   78 │   │   # Try to read the checkpoint at `path`. If not exist, do not re │
│   79 │   │   fs = get_filesystem(path)                                       │
│   80 │   │   if not fs.exists(path):                                         │
│ ❱ 81 │   │   │   raise FileNotFoundError(f"Checkpoint file not found: {path} │
│   82 │   │                                                                   │
│   83 │   │   return pl_load(path, map_location=map_location)                 │
│   84                                                                         │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │           fs = <fsspec.implementations.local.LocalFileSystem object at   │ │
│ │                0x7f502876c910>                                           │ │
│ │ map_location = <function TorchCheckpointIO.<lambda> at 0x7f50e2dacdc0>   │ │
│ │         path = '/home/tidop/projects/Noisy-Student/checkpoints/best_tea… │ │
│ │         self = <lightning_fabric.plugins.io.torch_io.TorchCheckpointIO   │ │
│ │                object at 0x7f5026f00130>                                 │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
╰──────────────────────────────────────────────────────────────────────────────╯
FileNotFoundError: Checkpoint file not found:
/home/tidop/projects/Noisy-Student/checkpoints/best_teacher.ckpt
