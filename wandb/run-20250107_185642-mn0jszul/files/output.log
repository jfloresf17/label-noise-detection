Traceback (most recent call last):
  File "/home/tidop/projects/Noisy-Student/train_teacher.py", line 274, in <module>
    typer.run(train_teacher)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 1080, in run
    app()
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 338, in __call__
    raise e
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 321, in __call__
    return get_command(self)(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/core.py", line 665, in main
    return _main(
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/core.py", line 197, in _main
    rv = self.invoke(ctx)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/typer/main.py", line 703, in wrapper
    return callback(**use_params)
  File "/home/tidop/projects/Noisy-Student/train_teacher.py", line 132, in train_teacher
    loss.backward()
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/torch/autograd/__init__.py", line 340, in backward
    grad_tensors_ = _make_grads(tensors, grad_tensors_, is_grads_batched=False)
  File "/home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/torch/autograd/__init__.py", line 198, in _make_grads
    raise RuntimeError(
RuntimeError: grad can be implicitly created only for scalar outputs
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /home/tidop/projects/Noisy-Student/train_teacher.py:132 in train_teacher     │
│                                                                              │
│   129 │   │   │   loss = symmetric_cross_entropy(masks, outputs, alpha, beta │
│   130 │   │   │                                                              │
│   131 │   │   │   # Backward pass and optimization                           │
│ ❱ 132 │   │   │   loss.backward()                                            │
│   133 │   │   │   optimizer.step()                                           │
│   134 │   │   │                                                              │
│   135 │   │   │   running_loss += loss.item()                                │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │                  alpha = 0.01                                            │ │
│ │             batch_size = 16                                              │ │
│ │                   beta = 1                                               │ │
│ │ combined_train_dataset = <torch.utils.data.dataset.ConcatDataset object  │ │
│ │                          at 0x7bbc085b3bb0>                              │ │
│ │   combined_val_dataset = <torch.utils.data.dataset.ConcatDataset object  │ │
│ │                          at 0x7bbc085b3dc0>                              │ │
│ │                 config = {                                               │ │
│ │                          │   'device': 'cuda',                           │ │
│ │                          │   'learning_rate': '1e-4',                    │ │
│ │                          │   'data': {                                   │ │
│ │                          │   │   'batch_size': 16,                       │ │
│ │                          │   │   'num_workers': 16,                      │ │
│ │                          │   │   'whu_path':                             │ │
│ │                          '/media/tidop/Datos_4TB1/databases/whu_adjuste… │ │
│ │                          │   │   'alabama_path':                         │ │
│ │                          '/media/tidop/Datos_4TB1/databases/alabama',    │ │
│ │                          │   │   'datacentric_image_path':               │ │
│ │                          '/media/tidop/Datos_4TB1/databases/kaggle/data… │ │
│ │                          │   │   'label_noisy_path':                     │ │
│ │                          '/media/tidop/Datos_4TB1/databases/kaggle/data… │ │
│ │                          │   },                                          │ │
│ │                          │   'Normalize': {                              │ │
│ │                          │   │   'apply': True,                          │ │
│ │                          │   │   'WHU': {                                │ │
│ │                          │   │   │   'mean': [                           │ │
│ │                          │   │   │   │   72.62323902,                    │ │
│ │                          │   │   │   │   99.33869521,                    │ │
│ │                          │   │   │   │   82.94464024                     │ │
│ │                          │   │   │   ],                                  │ │
│ │                          │   │   │   'std': [                            │ │
│ │                          │   │   │   │   43.81751311,                    │ │
│ │                          │   │   │   │   42.46326449,                    │ │
│ │                          │   │   │   │   50.62061044                     │ │
│ │                          │   │   │   ]                                   │ │
│ │                          │   │   },                                      │ │
│ │                          │   │   'Alabama': {                            │ │
│ │                          │   │   │   'mean': [                           │ │
│ │                          │   │   │   │   83.00301721,                    │ │
│ │                          │   │   │   │   91.24630964,                    │ │
│ │                          │   │   │   │   87.26586959                     │ │
│ │                          │   │   │   ],                                  │ │
│ │                          │   │   │   'std': [                            │ │
│ │                          │   │   │   │   33.38048494,                    │ │
│ │                          │   │   │   │   36.60072106,                    │ │
│ │                          │   │   │   │   41.38057245                     │ │
│ │                          │   │   │   ]                                   │ │
│ │                          │   │   },                                      │ │
│ │                          │   │   'WHU + Alabama': {                      │ │
│ │                          │   │   │   'mean': [                           │ │
│ │                          │   │   │   │   94.21397367,                    │ │
│ │                          │   │   │   │   102.78712076,                   │ │
│ │                          │   │   │   │   99.94002467                     │ │
│ │                          │   │   │   ],                                  │ │
│ │                          │   │   │   'std': [                            │ │
│ │                          │   │   │   │   40.95295341,                    │ │
│ │                          │   │   │   │   41.52023864,                    │ │
│ │                          │   │   │   │   45.4620858                      │ │
│ │                          │   │   │   ]                                   │ │
│ │                          │   │   },                                      │ │
│ │                          │   │   'DataCentric': {                        │ │
│ │                          │   │   │   'mean': [                           │ │
│ │                          │   │   │   │   72.74413315,                    │ │
│ │                          │   │   │   │   99.76137101,                    │ │
│ │                          │   │   │   │   82.70024275                     │ │
│ │                          │   │   │   ],                                  │ │
│ │                          │   │   │   'std': [                            │ │
│ │                          │   │   │   │   36.28290664,                    │ │
│ │                          │   │   │   │   34.82507359,                    │ │
│ │                          │   │   │   │   41.48902725                     │ │
│ │                          │   │   │   ]                                   │ │
│ │                          │   │   }                                       │ │
│ │                          │   },                                          │ │
│ │                          │   'loss': {'alpha': 0.01, 'beta': 1},         │ │
│ │                          │   'trainer': {                                │ │
│ │                          │   │   'wandb_project': 'Unet-NRN-RSSEG',      │ │
│ │                          │   │   'experiment_name': 'Unet-WHU-Kaggle',   │ │
│ │                          │   │   'max_epochs': 50                        │ │
│ │                          │   }                                           │ │
│ │                          }                                               │ │
│ │            config_path = 'config.yaml'                                   │ │
│ │            data_module = <dataloader.DataCentricDataModule object at     │ │
│ │                          0x7bbc085b3580>                                 │ │
│ │                 device = 'cuda'                                          │ │
│ │                  epoch = 0                                               │ │
│ │                 epochs = 50                                              │ │
│ │      epochs_no_improve = 0                                               │ │
│ │                 images = tensor([[[[-1.6057e+00, -1.6476e+00,            │ │
│ │                          -1.6574e+00,  ..., -4.0016e-01,                 │ │
│ │                          │   │   │   8.6437e-02, -1.6140e-01],           │ │
│ │                          │   │     [-1.3285e+00, -1.6545e+00,            │ │
│ │                          -1.5750e+00,  ..., -1.2156e-01,                 │ │
│ │                          │   │      -1.7968e-01,  1.3901e-01],           │ │
│ │                          │   │     [-1.5669e+00, -1.4488e+00,            │ │
│ │                          -6.3042e-01,  ..., -3.5192e-01,                 │ │
│ │                          │   │      -2.7311e-01, -1.3648e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.3975e+00,  1.5106e+00,            │ │
│ │                          1.5059e+00,  ..., -3.0128e-01,                  │ │
│ │                          │   │      -4.2110e-01, -2.2981e-01],           │ │
│ │                          │   │     [ 1.9065e+00,  1.6992e+00,            │ │
│ │                          1.5227e+00,  ..., -1.2726e-01,                  │ │
│ │                          │   │      -1.7041e-01, -8.3912e-02],           │ │
│ │                          │   │     [ 1.7547e+00,  1.6726e+00,            │ │
│ │                          1.8519e+00,  ..., -2.6200e-01,                  │ │
│ │                          │   │      -5.4569e-02, -1.7537e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-1.9443e+00, -2.2536e+00,            │ │
│ │                          -2.3394e+00,  ..., -4.4449e-01,                 │ │
│ │                          │   │   │   2.2302e-02, -1.4976e-01],           │ │
│ │                          │   │     [-1.5320e+00, -2.3026e+00,            │ │
│ │                          -2.1753e+00,  ..., -1.7945e-01,                 │ │
│ │                          │   │      -2.3611e-01,  7.0243e-02],           │ │
│ │                          │   │     [-2.2006e+00, -2.0318e+00,            │ │
│ │                          -6.0187e-01,  ..., -4.5321e-01,                 │ │
│ │                          │   │      -3.4503e-01, -2.1151e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.2662e+00,  1.3896e+00,            │ │
│ │                          1.3815e+00,  ..., -3.4724e-01,                  │ │
│ │                          │   │      -4.6720e-01, -3.1496e-01],           │ │
│ │                          │   │     [ 1.7398e+00,  1.5684e+00,            │ │
│ │                          1.4116e+00,  ..., -1.6473e-01,                  │ │
│ │                          │   │      -2.3538e-01, -2.1151e-01],           │ │
│ │                          │   │     [ 1.6660e+00,  1.5253e+00,            │ │
│ │                          1.6927e+00,  ..., -2.4431e-01,                  │ │
│ │                          │   │      -1.6694e-01, -2.8240e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-1.6265e+00, -1.6386e+00,            │ │
│ │                          -1.6386e+00,  ..., -3.8765e-01,                 │ │
│ │                          │   │   │   6.9883e-02, -3.8819e-02],           │ │
│ │                          │   │     [-1.4227e+00, -1.6386e+00,            │ │
│ │                          -1.5506e+00,  ..., -1.3410e-01,                 │ │
│ │                          │   │      -1.8596e-01,  1.1751e-01],           │ │
│ │                          │   │     [-1.5772e+00, -1.4302e+00,            │ │
│ │                          -6.2458e-01,  ..., -3.8135e-01,                 │ │
│ │                          │   │      -2.9152e-01, -1.7141e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.1970e+00,  1.2642e+00,            │ │
│ │                          1.2657e+00,  ..., -3.0202e-01,                  │ │
│ │                          │   │      -4.1036e-01, -2.4443e-01],           │ │
│ │                          │   │     [ 1.6630e+00,  1.4685e+00,            │ │
│ │                          1.2876e+00,  ..., -1.2608e-01,                  │ │
│ │                          │   │      -2.0355e-01, -1.3366e-01],           │ │
│ │                          │   │     [ 1.4138e+00,  1.4520e+00,            │ │
│ │                          1.6220e+00,  ..., -2.1374e-01,                  │ │
│ │                          │   │      -1.2555e-01, -2.3274e-01]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 2.9561e+00,  2.9561e+00,            │ │
│ │                          3.0388e+00,  ..., -1.1505e+00,                  │ │
│ │                          │   │      -9.3003e-01, -8.7491e-01],           │ │
│ │                          │   │     [ 2.9561e+00,  3.0112e+00,            │ │
│ │                          3.0388e+00,  ..., -1.5915e+00,                  │ │
│ │                          │   │      -5.7173e-01, -3.5124e-01],           │ │
│ │                          │   │     [ 2.9837e+00,  3.0388e+00,            │ │
│ │                          3.0663e+00,  ..., -1.7293e+00,                  │ │
│ │                          │   │      -6.2686e-01, -2.4100e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-1.3075e-01,  5.3071e-01,            │ │
│ │                          -1.0319e-01,  ..., -4.3393e-01,                 │ │
│ │                          │   │      -3.5124e-01, -4.0637e-01],           │ │
│ │                          │   │     [-6.8198e-01, -9.3003e-01,            │ │
│ │                          6.2174e-02,  ..., -3.2368e-01,                  │ │
│ │                          │   │      -1.8588e-01, -2.4100e-01],           │ │
│ │                          │   │     [-1.0319e-01, -3.7880e-01,            │ │
│ │                          -9.8515e-01,  ..., -1.3075e-01,                 │ │
│ │                          │   │      -1.8588e-01, -1.8588e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[ 2.4763e+00,  2.4763e+00,            │ │
│ │                          2.5625e+00,  ..., -7.1102e-01,                  │ │
│ │                          │   │      -7.9717e-01, -6.8231e-01],           │ │
│ │                          │   │     [ 2.4763e+00,  2.5338e+00,            │ │
│ │                          2.5625e+00,  ..., -1.1992e+00,                  │ │
│ │                          │   │      -3.6644e-01, -1.3672e-01],           │ │
│ │                          │   │     [ 2.5051e+00,  2.5625e+00,            │ │
│ │                          2.5912e+00,  ..., -1.4002e+00,                  │ │
│ │                          │   │      -4.2387e-01, -2.1863e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-9.4074e-01, -1.9415e-01,            │ │
│ │                          -8.5460e-01,  ..., -3.3773e-01,                 │ │
│ │                          │   │      -2.5158e-01, -3.0901e-01],           │ │
│ │                          │   │     [-1.5150e+00, -1.7735e+00,            │ │
│ │                          -6.8231e-01,  ..., -2.5158e-01,                 │ │
│ │                          │   │      -1.0801e-01, -1.6544e-01],           │ │
│ │                          │   │     [-9.1203e-01, -1.1992e+00,            │ │
│ │                          -1.8309e+00,  ..., -7.9293e-02,                 │ │
│ │                          │   │      -1.9415e-01, -1.9415e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[ 2.4657e+00,  2.4657e+00,            │ │
│ │                          2.5380e+00,  ..., -1.0533e+00,                  │ │
│ │                          │   │      -9.0868e-01, -8.1227e-01],           │ │
│ │                          │   │     [ 2.4657e+00,  2.5139e+00,            │ │
│ │                          2.5380e+00,  ..., -1.3907e+00,                  │ │
│ │                          │   │      -5.2304e-01, -3.5432e-01],           │ │
│ │                          │   │     [ 2.4898e+00,  2.5380e+00,            │ │
│ │                          2.5621e+00,  ..., -1.4389e+00,                  │ │
│ │                          │   │      -5.7124e-01, -2.3380e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-4.7483e-01,  1.5184e-01,            │ │
│ │                          -4.0252e-01,  ..., -4.0981e-02,                 │ │
│ │                          │   │      -1.6149e-01, -2.0970e-01],           │ │
│ │                          │   │     [-9.5689e-01, -1.1738e+00,            │ │
│ │                          -2.5791e-01,  ...,  7.9533e-02,                 │ │
│ │                          │   │   │   7.2250e-03, -4.0981e-02],           │ │
│ │                          │   │     [-4.5073e-01, -6.9175e-01,            │ │
│ │                          -1.2220e+00,  ...,  2.7236e-01,                 │ │
│ │                          │   │   │   7.2250e-03,  7.2250e-03]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[-5.4611e-01, -5.0775e-01,            │ │
│ │                          -7.4412e-01,  ..., -1.6583e-01,                 │ │
│ │                          │   │      -2.1229e-01, -3.4165e-01],           │ │
│ │                          │   │     [-6.3979e-01, -5.2130e-01,            │ │
│ │                          -6.4040e-01,  ..., -2.9558e-01,                 │ │
│ │                          │   │      -1.8147e-01, -1.9354e-01],           │ │
│ │                          │   │     [-3.8752e-01, -3.3765e-01,            │ │
│ │                          -5.0810e-01,  ..., -3.1127e-01,                 │ │
│ │                          │   │      -2.3460e-01, -2.5711e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 4.2016e-02,  4.5969e-01,            │ │
│ │                          6.6829e-01,  ...,  2.0216e+00,                  │ │
│ │                          │   │   │   1.9338e+00,  1.9428e+00],           │ │
│ │                          │   │     [-2.2533e-01, -7.5557e-02,            │ │
│ │                          2.7569e-01,  ...,  2.0123e+00,                  │ │
│ │                          │   │   │   1.9702e+00,  2.0528e+00],           │ │
│ │                          │   │     [-5.1537e-01, -3.2802e-01,            │ │
│ │                          1.8302e-01,  ...,  2.0634e+00,                  │ │
│ │                          │   │   │   2.1078e+00,  2.1222e+00]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-3.7468e-01, -3.3599e-01,            │ │
│ │                          -5.3953e-01,  ...,  1.0346e-01,                 │ │
│ │                          │   │   │   5.1739e-02, -8.6796e-02],           │ │
│ │                          │   │     [-4.8906e-01, -3.6196e-01,            │ │
│ │                          -4.4107e-01,  ..., -5.8019e-02,                 │ │
│ │                          │   │   │   7.0032e-02,  7.8653e-02],           │ │
│ │                          │   │     [-1.3918e-01, -1.1689e-01,            │ │
│ │                          -3.0676e-01,  ..., -4.0357e-02,                 │ │
│ │                          │   │   │   4.0595e-02,  3.3236e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 5.8468e-02,  5.9843e-01,            │ │
│ │                          8.4754e-01,  ...,  1.9312e+00,                  │ │
│ │                          │   │   │   1.8797e+00,  1.8743e+00],           │ │
│ │                          │   │     [-3.1286e-01, -9.5920e-02,            │ │
│ │                          2.5990e-01,  ...,  1.8933e+00,                  │ │
│ │                          │   │   │   1.8650e+00,  1.9155e+00],           │ │
│ │                          │   │     [-5.7846e-01, -4.6383e-01,            │ │
│ │                          -3.4049e-02,  ...,  1.7999e+00,                 │ │
│ │                          │   │   │   1.8647e+00,  1.9245e+00]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-2.5693e-01, -2.7971e-01,            │ │
│ │                          -5.9790e-01,  ...,  1.1398e-01,                 │ │
│ │                          │   │   │   7.3763e-02, -3.7610e-02],           │ │
│ │                          │   │     [-3.7037e-01, -2.6127e-01,            │ │
│ │                          -3.8629e-01,  ..., -2.2983e-02,                 │ │
│ │                          │   │   │   9.9250e-02,  1.0234e-01],           │ │
│ │                          │   │     [-4.9034e-03,  5.8197e-02,            │ │
│ │                          -1.9707e-01,  ..., -3.2243e-02,                 │ │
│ │                          │   │   │   5.4493e-02,  3.6370e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.3620e-01,  7.4622e-01,            │ │
│ │                          1.0351e+00,  ...,  1.8738e+00,                  │ │
│ │                          │   │   │   1.8695e+00,  1.8302e+00],           │ │
│ │                          │   │     [-2.3808e-01,  2.2700e-02,            │ │
│ │                          3.6440e-01,  ...,  1.8130e+00,                  │ │
│ │                          │   │   │   1.8377e+00,  1.8309e+00],           │ │
│ │                          │   │     [-4.7020e-01, -3.6472e-01,            │ │
│ │                          2.0496e-02,  ...,  1.6104e+00,                  │ │
│ │                          │   │   │   1.7226e+00,  1.8254e+00]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   ...,                                    │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[-1.5200e+00, -1.4972e+00,            │ │
│ │                          -1.3758e+00,  ...,  1.0254e+00,                 │ │
│ │                          │   │   │   6.8592e-01, -6.3042e-01],           │ │
│ │                          │   │     [-1.5070e+00, -1.5048e+00,            │ │
│ │                          -1.1657e+00,  ...,  1.0502e+00,                 │ │
│ │                          │   │   │   9.1648e-01, -6.4020e-01],           │ │
│ │                          │   │     [-1.5025e+00, -1.4770e+00,            │ │
│ │                          -6.5466e-01,  ...,  1.0285e+00,                 │ │
│ │                          │   │   │   6.8755e-01, -1.0253e+00],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-4.6903e-01, -3.3836e-02,            │ │
│ │                          -3.4657e-01,  ..., -4.0968e-02,                 │ │
│ │                          │   │   │   8.5984e-03, -1.4260e-01],           │ │
│ │                          │   │     [-6.4468e-01, -7.0494e-01,            │ │
│ │                          -5.8370e-01,  ...,  7.4925e-02,                 │ │
│ │                          │   │   │   9.0258e-02, -1.5890e-01],           │ │
│ │                          │   │     [-5.9874e-01, -4.5151e-01,            │ │
│ │                          -4.6577e-01,  ...,  1.8547e-01,                 │ │
│ │                          │   │      -7.4946e-02, -1.6233e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-1.6430e+00, -1.6190e+00,            │ │
│ │                          -1.4163e+00,  ...,  9.5420e-01,                 │ │
│ │                          │   │   │   6.8212e-01, -7.1399e-01],           │ │
│ │                          │   │     [-1.6556e+00, -1.6399e+00,            │ │
│ │                          -1.0773e+00,  ...,  9.6971e-01,                 │ │
│ │                          │   │   │   8.2620e-01, -7.8974e-01],           │ │
│ │                          │   │     [-1.6766e+00, -1.6388e+00,            │ │
│ │                          -6.6222e-01,  ...,  9.2555e-01,                 │ │
│ │                          │   │   │   5.7672e-01, -1.2212e+00],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-2.3632e-01,  2.0839e-01,            │ │
│ │                          -5.4340e-02,  ...,  1.1897e-01,                 │ │
│ │                          │   │   │   6.8561e-02, -2.0605e-01],           │ │
│ │                          │   │     [-3.3978e-01, -3.4540e-01,            │ │
│ │                          -1.9969e-01,  ...,  2.3304e-01,                 │ │
│ │                          │   │   │   1.3443e-01, -2.3170e-01],           │ │
│ │                          │   │     [-3.6074e-01, -1.2152e-01,            │ │
│ │                          -1.1816e-01,  ...,  3.7681e-01,                 │ │
│ │                          │   │      -2.3536e-02, -1.5937e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-1.5745e+00, -1.5599e+00,            │ │
│ │                          -1.4410e+00,  ...,  9.4474e-01,                 │ │
│ │                          │   │   │   6.9533e-01, -6.6855e-01],           │ │
│ │                          │   │     [-1.5839e+00, -1.5781e+00,            │ │
│ │                          -1.2107e+00,  ...,  9.6383e-01,                 │ │
│ │                          │   │   │   8.7401e-01, -7.1114e-01],           │ │
│ │                          │   │     [-1.5952e+00, -1.5580e+00,            │ │
│ │                          -7.2397e-01,  ...,  9.2000e-01,                 │ │
│ │                          │   │   │   6.1102e-01, -1.1327e+00],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-4.9595e-01,  6.2210e-02,            │ │
│ │                          -2.1714e-01,  ...,  2.2241e-01,                 │ │
│ │                          │   │   │   2.3352e-01, -1.5839e-02],           │ │
│ │                          │   │     [-5.7956e-01, -5.5605e-01,            │ │
│ │                          -4.1160e-01,  ...,  4.2057e-01,                 │ │
│ │                          │   │   │   3.7088e-01, -4.9352e-02],           │ │
│ │                          │   │     [-5.6091e-01, -3.9153e-01,            │ │
│ │                          -3.6578e-01,  ...,  5.8069e-01,                 │ │
│ │                          │   │   │   2.1452e-01,  3.4556e-02]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 1.2411e-01, -3.0194e-01,            │ │
│ │                          -3.7041e-01,  ..., -5.7458e-01,                 │ │
│ │                          │   │      -4.3276e-01, -6.6954e-01],           │ │
│ │                          │   │     [ 3.0605e-02,  1.1451e-01,            │ │
│ │                          -2.7417e-02,  ..., -5.8584e-01,                 │ │
│ │                          │   │      -5.1666e-01, -3.8345e-01],           │ │
│ │                          │   │     [ 3.7905e-01,  2.2434e-01,            │ │
│ │                          4.2118e-02,  ..., -5.2736e-01,                  │ │
│ │                          │   │      -3.7902e-01, -3.7448e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.0609e+00,  1.6671e+00,            │ │
│ │                          2.3229e+00,  ..., -6.7300e-04,                  │ │
│ │                          │   │      -2.3353e-01, -2.3592e-01],           │ │
│ │                          │   │     [ 5.1965e-01, -6.2364e-01,            │ │
│ │                          2.5002e-02,  ...,  4.4186e-01,                  │ │
│ │                          │   │      -1.5116e-01, -3.5655e-01],           │ │
│ │                          │   │     [-2.6946e-01, -1.2747e+00,            │ │
│ │                          -8.5008e-01,  ...,  3.5419e-01,                 │ │
│ │                          │   │      -7.0463e-02, -6.5231e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[ 3.6594e-01, -6.7692e-02,            │ │
│ │                          -3.3347e-01,  ..., -4.6594e-01,                 │ │
│ │                          │   │      -2.9772e-01, -6.1546e-01],           │ │
│ │                          │   │     [ 2.6369e-01,  3.7802e-01,            │ │
│ │                          1.9440e-01,  ..., -4.7456e-01,                  │ │
│ │                          │   │      -4.1347e-01, -2.3296e-01],           │ │
│ │                          │   │     [ 5.0549e-01,  5.2300e-01,            │ │
│ │                          3.6514e-01,  ..., -3.3179e-01,                  │ │
│ │                          │   │      -1.5811e-01, -1.0091e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 6.5520e-01,  1.1379e+00,            │ │
│ │                          1.7064e+00,  ...,  1.9253e-02,                  │ │
│ │                          │   │      -2.0373e-01, -1.7871e-01],           │ │
│ │                          │   │     [ 2.3593e-01, -8.7012e-01,            │ │
│ │                          -2.8873e-01,  ...,  3.9973e-01,                 │ │
│ │                          │   │      -1.1689e-01, -2.8973e-01],           │ │
│ │                          │   │     [-2.1368e-01, -1.4016e+00,            │ │
│ │                          -9.4576e-01,  ...,  2.7588e-01,                 │ │
│ │                          │   │      -7.6102e-02, -5.9480e-01]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[ 2.7202e-01, -1.8481e-01,            │ │
│ │                          -3.5767e-01,  ..., -7.7428e-01,                 │ │
│ │                          │   │      -6.7339e-01, -9.3383e-01],           │ │
│ │                          │   │     [ 7.9055e-02,  2.2025e-01,            │ │
│ │                          7.1470e-02,  ..., -7.7860e-01,                  │ │
│ │                          │   │      -7.4496e-01, -6.1977e-01],           │ │
│ │                          │   │     [ 4.7062e-01,  3.6872e-01,            │ │
│ │                          1.9555e-01,  ..., -6.2921e-01,                  │ │
│ │                          │   │      -4.5697e-01, -5.3934e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 9.8460e-01,  1.4608e+00,            │ │
│ │                          1.9852e+00,  ..., -6.4653e-02,                  │ │
│ │                          │   │      -3.2023e-01, -3.4532e-01],           │ │
│ │                          │   │     [ 4.1559e-01, -6.6316e-01,            │ │
│ │                          -1.4031e-02,  ...,  3.1378e-01,                 │ │
│ │                          │   │      -2.1559e-01, -4.0635e-01],           │ │
│ │                          │   │     [-3.2466e-01, -1.3013e+00,            │ │
│ │                          -8.9704e-01,  ...,  1.8136e-01,                 │ │
│ │                          │   │      -1.7741e-01, -6.9516e-01]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[-1.1129e+00, -1.1203e+00,            │ │
│ │                          -1.1048e+00,  ...,  1.4798e-01,                 │ │
│ │                          │   │   │   1.3982e-01,  1.4600e-01],           │ │
│ │                          │   │     [-1.1248e+00, -1.0954e+00,            │ │
│ │                          -1.0754e+00,  ...,  7.7064e-01,                 │ │
│ │                          │   │   │   4.5042e-01,  1.7569e-01],           │ │
│ │                          │   │     [-1.1117e+00, -1.0733e+00,            │ │
│ │                          -1.0819e+00,  ...,  1.6354e+00,                 │ │
│ │                          │   │   │   5.7843e-01,  4.2551e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-6.8136e-01, -1.1696e+00,            │ │
│ │                          -1.4188e+00,  ..., -3.1875e-01,                 │ │
│ │                          │   │      -3.1127e-01, -2.0902e-01],           │ │
│ │                          │   │     [-2.2044e-01, -4.7102e-01,            │ │
│ │                          -1.2520e+00,  ..., -2.6598e-01,                 │ │
│ │                          │   │      -2.9664e-01, -2.8849e-01],           │ │
│ │                          │   │     [-8.8744e-02, -1.0999e-01,            │ │
│ │                          -5.5706e-01,  ..., -5.6562e-01,                 │ │
│ │                          │   │      -3.1702e-01, -4.1703e-02]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-1.1946e+00, -1.1850e+00,            │ │
│ │                          -1.1670e+00,  ...,  1.9893e-01,                 │ │
│ │                          │   │   │   1.9766e-01,  1.7033e-01],           │ │
│ │                          │   │     [-1.2048e+00, -1.1641e+00,            │ │
│ │                          -1.1343e+00,  ...,  7.0220e-01,                 │ │
│ │                          │   │   │   4.4057e-01,  1.9051e-01],           │ │
│ │                          │   │     [-1.1737e+00, -1.1384e+00,            │ │
│ │                          -1.1431e+00,  ...,  1.6181e+00,                 │ │
│ │                          │   │   │   5.7819e-01,  4.3821e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-6.3667e-01, -1.1339e+00,            │ │
│ │                          -1.4394e+00,  ..., -3.1743e-01,                 │ │
│ │                          │   │      -3.0566e-01, -1.9553e-01],           │ │
│ │                          │   │     [-1.0974e-01, -3.4650e-01,            │ │
│ │                          -1.2083e+00,  ..., -2.3575e-01,                 │ │
│ │                          │   │      -2.8395e-01, -2.8469e-01],           │ │
│ │                          │   │     [ 5.1619e-02,  6.6037e-02,            │ │
│ │                          -4.1253e-01,  ..., -4.9201e-01,                 │ │
│ │                          │   │      -2.7585e-01, -2.4797e-02]],          │ │
│ │                          │   │                                           │ │
│ │                          │   │    [[-1.2644e+00, -1.2547e+00,            │ │
│ │                          -1.2417e+00,  ...,  1.8594e-01,                 │ │
│ │                          │   │   │   2.0993e-01,  2.1114e-01],           │ │
│ │                          │   │     [-1.2650e+00, -1.2274e+00,            │ │
│ │                          -1.2070e+00,  ...,  7.1659e-01,                 │ │
│ │                          │   │   │   4.6163e-01,  2.1240e-01],           │ │
│ │                          │   │     [-1.2420e+00, -1.2135e+00,            │ │
│ │                          -1.2219e+00,  ...,  1.6302e+00,                 │ │
│ │                          │   │   │   5.8077e-01,  4.3076e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [-5.2276e-01, -1.0734e+00,            │ │
│ │                          -1.4410e+00,  ..., -3.5665e-01,                 │ │
│ │                          │   │      -3.0819e-01, -1.7070e-01],           │ │
│ │                          │   │     [ 1.4361e-01, -1.1527e-01,            │ │
│ │                          -1.1549e+00,  ..., -2.4029e-01,                 │ │
│ │                          │   │      -2.7455e-01, -2.6630e-01],           │ │
│ │                          │   │     [ 3.8853e-01,  4.3464e-01,            │ │
│ │                          -2.3984e-01,  ..., -4.9842e-01,                 │ │
│ │                          │   │      -2.6489e-01, -3.3411e-03]]]],        │ │
│ │                          device='cuda:0')                                │ │
│ │            input_files = [                                               │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │   ... +4990                                   │ │
│ │                          ]                                               │ │
│ │            input_paths = '/media/tidop/Datos_4TB1/databases/kaggle/data… │ │
│ │   kaggle_train_dataset = <dataloader.StudentDataset object at            │ │
│ │                          0x7bbc085b3c70>                                 │ │
│ │     kaggle_val_dataset = <dataloader.StudentDataset object at            │ │
│ │                          0x7bbc085b3880>                                 │ │
│ │            label_files = [                                               │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │                                               │ │
│ │                          PosixPath('/media/tidop/Datos_4TB1/databases/k… │ │
│ │                          │   ... +4990                                   │ │
│ │                          ]                                               │ │
│ │            label_paths = '/media/tidop/Datos_4TB1/databases/kaggle/data… │ │
│ │                 logits = tensor([[[[ 2.4385e-01,  7.7406e-02,            │ │
│ │                          1.0813e-01,  ...,  1.1438e-01,                  │ │
│ │                          │   │   │   9.1123e-02,  1.5060e-01],           │ │
│ │                          │   │     [ 2.1728e-01,  9.1752e-02,            │ │
│ │                          6.0083e-02,  ...,  1.5663e-01,                  │ │
│ │                          │   │   │   9.7916e-02,  6.2210e-02],           │ │
│ │                          │   │     [ 5.0284e-02, -8.6151e-02,            │ │
│ │                          1.4783e-01,  ...,  1.8760e-01,                  │ │
│ │                          │   │   │   6.8556e-02, -1.8994e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 2.7244e-01,  7.6864e-02,            │ │
│ │                          2.5591e-01,  ...,  6.4444e-02,                  │ │
│ │                          │   │   │   4.6788e-02,  3.4763e-02],           │ │
│ │                          │   │     [ 3.0972e-01,  2.2965e-01,            │ │
│ │                          2.6387e-01,  ...,  8.7809e-02,                  │ │
│ │                          │   │   │   1.1400e-02,  8.9801e-03],           │ │
│ │                          │   │     [ 3.0434e-01,  2.4813e-01,            │ │
│ │                          2.4887e-01,  ...,  1.6422e-01,                  │ │
│ │                          │   │   │   1.0705e-01,  7.3357e-02]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 2.0962e-02, -1.7032e-02,            │ │
│ │                          8.7120e-02,  ..., -2.1698e-02,                  │ │
│ │                          │   │   │   3.9310e-02,  6.4364e-02],           │ │
│ │                          │   │     [ 1.8721e-01,  2.4363e-01,            │ │
│ │                          3.0111e-01,  ..., -1.6693e-01,                  │ │
│ │                          │   │      -4.6122e-02, -3.3489e-02],           │ │
│ │                          │   │     [ 2.3922e-01,  1.8075e-01,            │ │
│ │                          5.1958e-01,  ..., -6.7275e-02,                  │ │
│ │                          │   │   │   3.0780e-02, -4.8407e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 2.8059e-01, -6.6586e-02,            │ │
│ │                          1.7636e-02,  ...,  3.0605e-02,                  │ │
│ │                          │   │   │   5.9791e-02, -2.3914e-02],           │ │
│ │                          │   │     [ 1.9422e-01,  4.6663e-02,            │ │
│ │                          4.9866e-02,  ...,  2.6325e-02,                  │ │
│ │                          │   │   │   5.1937e-02, -4.0728e-02],           │ │
│ │                          │   │     [ 2.9875e-01, -4.0797e-03,            │ │
│ │                          1.0581e-01,  ...,  1.3706e-01,                  │ │
│ │                          │   │   │   1.0598e-01,  3.9017e-02]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 1.6033e-01,  1.3643e-01,            │ │
│ │                          1.1226e-01,  ...,  8.7269e-02,                  │ │
│ │                          │   │   │   9.7997e-02,  1.1746e-01],           │ │
│ │                          │   │     [ 1.3233e-01,  1.1801e-01,            │ │
│ │                          9.1818e-02,  ...,  1.2009e-01,                  │ │
│ │                          │   │   │   6.9893e-02,  7.7828e-02],           │ │
│ │                          │   │     [ 1.3470e-01,  9.5668e-02,            │ │
│ │                          8.2307e-02,  ...,  2.7956e-02,                  │ │
│ │                          │   │   │   6.0233e-02,  7.6791e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.3788e-01,  2.3665e-01,            │ │
│ │                          2.0000e-01,  ...,  3.1907e-01,                  │ │
│ │                          │   │   │   3.9279e-01,  1.2220e-01],           │ │
│ │                          │   │     [ 1.7148e-01,  1.6015e-01,            │ │
│ │                          1.1982e-01,  ...,  4.3643e-01,                  │ │
│ │                          │   │   │   5.0130e-01,  1.8931e-01],           │ │
│ │                          │   │     [ 1.8949e-01,  1.5519e-01,            │ │
│ │                          1.3519e-01,  ...,  3.1411e-01,                  │ │
│ │                          │   │   │   4.9071e-01,  1.4157e-01]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   ...,                                    │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 2.2178e-01,  8.2075e-02,            │ │
│ │                          6.5367e-02,  ...,  7.9690e-02,                  │ │
│ │                          │   │   │   2.4306e-01,  1.0040e-01],           │ │
│ │                          │   │     [ 1.6960e-01, -6.8362e-02,            │ │
│ │                          -1.0341e-02,  ...,  1.1871e-01,                 │ │
│ │                          │   │   │   6.2004e-02, -6.0884e-02],           │ │
│ │                          │   │     [ 3.2225e-02, -2.2948e-01,            │ │
│ │                          9.2445e-02,  ...,  1.8654e-01,                  │ │
│ │                          │   │   │   2.0250e-01, -1.2245e-01],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.1340e-01,  1.9531e-01,            │ │
│ │                          1.0347e-01,  ...,  2.0394e-01,                  │ │
│ │                          │   │   │   1.4265e-01,  5.6117e-02],           │ │
│ │                          │   │     [ 1.7708e-01,  4.3591e-02,            │ │
│ │                          9.7299e-02,  ...,  1.0489e-01,                  │ │
│ │                          │   │   │   1.2842e-01,  3.0032e-02],           │ │
│ │                          │   │     [ 2.2566e-01,  7.4572e-02,            │ │
│ │                          1.4305e-01,  ...,  1.6132e-01,                  │ │
│ │                          │   │   │   1.1303e-01,  9.0775e-02]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 1.1329e-01,  1.2820e-01,            │ │
│ │                          1.1890e-01,  ...,  6.5421e-02,                  │ │
│ │                          │   │   │   8.8846e-02,  1.0805e-01],           │ │
│ │                          │   │     [ 6.2624e-02,  1.2327e-01,            │ │
│ │                          8.0901e-02,  ...,  9.8563e-02,                  │ │
│ │                          │   │   │   8.8076e-02, -1.8751e-02],           │ │
│ │                          │   │     [ 6.7477e-02,  1.2404e-01,            │ │
│ │                          2.1447e-01,  ..., -4.1492e-02,                  │ │
│ │                          │   │   │   2.3010e-03, -6.0499e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 3.6975e-01,  7.0235e-01,            │ │
│ │                          7.8875e-01,  ...,  2.0516e-01,                  │ │
│ │                          │   │      -4.1386e-02, -7.7109e-02],           │ │
│ │                          │   │     [ 3.7179e-01,  3.7802e-01,            │ │
│ │                          2.8265e-01,  ...,  2.3610e-01,                  │ │
│ │                          │   │      -9.3168e-02, -1.1961e-02],           │ │
│ │                          │   │     [ 3.0783e-02, -2.7636e-01,            │ │
│ │                          -2.4444e-01,  ..., -1.5461e-03,                 │ │
│ │                          │   │   │   2.3843e-01,  7.7712e-02]]],         │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[ 1.8730e-01,  1.0577e-01,            │ │
│ │                          8.7913e-02,  ...,  1.0153e-01,                  │ │
│ │                          │   │   │   1.1319e-01,  1.1260e-01],           │ │
│ │                          │   │     [ 1.2509e-01,  3.7334e-02,            │ │
│ │                          7.1122e-03,  ...,  7.6091e-02,                  │ │
│ │                          │   │   │   8.3603e-02,  4.8680e-02],           │ │
│ │                          │   │     [ 1.0372e-01,  2.3182e-02,            │ │
│ │                          7.5020e-02,  ...,  1.8126e-01,                  │ │
│ │                          │   │   │   1.3764e-02, -1.1756e-02],           │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [ 1.5049e-01,  6.7266e-02,            │ │
│ │                          2.8017e-04,  ...,  1.4721e-01,                  │ │
│ │                          │   │   │   1.2896e-01,  5.6542e-02],           │ │
│ │                          │   │     [ 1.5146e-01,  1.3765e-01,            │ │
│ │                          -2.3591e-02,  ...,  7.7579e-02,                 │ │
│ │                          │   │   │   9.2260e-02,  4.3151e-02],           │ │
│ │                          │   │     [ 9.1485e-02,  1.1054e-01,            │ │
│ │                          -6.5409e-03,  ...,  1.5186e-01,                 │ │
│ │                          │   │   │   1.3116e-01,  5.3103e-02]]]],        │ │
│ │                          device='cuda:0',                                │ │
│ │                          │      grad_fn=<ConvolutionBackward0>)          │ │
│ │                   loss = tensor([[4.0376, 3.9540, 3.6383,  ..., 3.8538,  │ │
│ │                          3.6098, 3.6106],                                │ │
│ │                          │   │   [4.0460, 3.9353, 3.6228,  ..., 3.8989,  │ │
│ │                          3.8509, 3.4479],                                │ │
│ │                          │   │   [3.9938, 3.8932, 3.6998,  ..., 3.9649,  │ │
│ │                          3.6079, 3.4716],                                │ │
│ │                          │   │   ...,                                    │ │
│ │                          │   │   [4.7741, 4.6097, 4.5613,  ..., 3.8664,  │ │
│ │                          3.8216, 3.6500],                                │ │
│ │                          │   │   [4.7019, 4.5230, 4.4785,  ..., 3.7876,  │ │
│ │                          3.8281, 3.7414],                                │ │
│ │                          │   │   [4.7260, 4.5571, 4.5007,  ..., 3.9725,  │ │
│ │                          4.0157, 3.8498]],                               │ │
│ │                          │      device='cuda:0', grad_fn=<AddBackward0>) │ │
│ │                     lr = 0.0001                                          │ │
│ │                  masks = tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.]]],     │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[1., 1., 1.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [1., 1., 1.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [1., 1., 1.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.]]],     │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0., 0., 0.,  ..., 1., 1., 1.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 1., 1., 1.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 1., 1., 1.]]],     │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   ...,                                    │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.]]],     │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.]]],     │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[1., 1., 1.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [1., 1., 1.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [1., 1., 1.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.],       │ │
│ │                          │   │     [0., 0., 0.,  ..., 0., 0., 0.]]]],    │ │
│ │                          device='cuda:0')                                │ │
│ │            max_val_iou = 0                                               │ │
│ │                   mean = [72.74413315, 99.76137101, 82.70024275]         │ │
│ │              normalize = True                                            │ │
│ │            num_workers = 16                                              │ │
│ │              optimizer = Adam (                                          │ │
│ │                          Parameter Group 0                               │ │
│ │                          │   amsgrad: False                              │ │
│ │                          │   betas: (0.9, 0.999)                         │ │
│ │                          │   capturable: False                           │ │
│ │                          │   differentiable: False                       │ │
│ │                          │   eps: 1e-08                                  │ │
│ │                          │   foreach: None                               │ │
│ │                          │   fused: None                                 │ │
│ │                          │   lr: 0.0001                                  │ │
│ │                          │   maximize: False                             │ │
│ │                          │   weight_decay: 0                             │ │
│ │                          )                                               │ │
│ │                outputs = tensor([[[[0.5607, 0.5193, 0.5270,  ...,        │ │
│ │                          0.5286, 0.5228, 0.5376],                        │ │
│ │                          │   │     [0.5541, 0.5229, 0.5150,  ...,        │ │
│ │                          0.5391, 0.5245, 0.5155],                        │ │
│ │                          │   │     [0.5126, 0.4785, 0.5369,  ...,        │ │
│ │                          0.5468, 0.5171, 0.4953],                        │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0.5677, 0.5192, 0.5636,  ...,        │ │
│ │                          0.5161, 0.5117, 0.5087],                        │ │
│ │                          │   │     [0.5768, 0.5572, 0.5656,  ...,        │ │
│ │                          0.5219, 0.5028, 0.5022],                        │ │
│ │                          │   │     [0.5755, 0.5617, 0.5619,  ...,        │ │
│ │                          0.5410, 0.5267, 0.5183]]],                      │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0.5052, 0.4957, 0.5218,  ...,        │ │
│ │                          0.4946, 0.5098, 0.5161],                        │ │
│ │                          │   │     [0.5467, 0.5606, 0.5747,  ...,        │ │
│ │                          0.4584, 0.4885, 0.4916],                        │ │
│ │                          │   │     [0.5595, 0.5451, 0.6270,  ...,        │ │
│ │                          0.4832, 0.5077, 0.4879],                        │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0.5697, 0.4834, 0.5044,  ...,        │ │
│ │                          0.5077, 0.5149, 0.4940],                        │ │
│ │                          │   │     [0.5484, 0.5117, 0.5125,  ...,        │ │
│ │                          0.5066, 0.5130, 0.4898],                        │ │
│ │                          │   │     [0.5741, 0.4990, 0.5264,  ...,        │ │
│ │                          0.5342, 0.5265, 0.5098]]],                      │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0.5400, 0.5341, 0.5280,  ...,        │ │
│ │                          0.5218, 0.5245, 0.5293],                        │ │
│ │                          │   │     [0.5330, 0.5295, 0.5229,  ...,        │ │
│ │                          0.5300, 0.5175, 0.5194],                        │ │
│ │                          │   │     [0.5336, 0.5239, 0.5206,  ...,        │ │
│ │                          0.5070, 0.5151, 0.5192],                        │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0.5344, 0.5589, 0.5498,  ...,        │ │
│ │                          0.5791, 0.5970, 0.5305],                        │ │
│ │                          │   │     [0.5428, 0.5400, 0.5299,  ...,        │ │
│ │                          0.6074, 0.6228, 0.5472],                        │ │
│ │                          │   │     [0.5472, 0.5387, 0.5337,  ...,        │ │
│ │                          0.5779, 0.6203, 0.5353]]],                      │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   ...,                                    │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0.5552, 0.5205, 0.5163,  ...,        │ │
│ │                          0.5199, 0.5605, 0.5251],                        │ │
│ │                          │   │     [0.5423, 0.4829, 0.4974,  ...,        │ │
│ │                          0.5296, 0.5155, 0.4848],                        │ │
│ │                          │   │     [0.5081, 0.4429, 0.5231,  ...,        │ │
│ │                          0.5465, 0.5505, 0.4694],                        │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0.5283, 0.5487, 0.5258,  ...,        │ │
│ │                          0.5508, 0.5356, 0.5140],                        │ │
│ │                          │   │     [0.5442, 0.5109, 0.5243,  ...,        │ │
│ │                          0.5262, 0.5321, 0.5075],                        │ │
│ │                          │   │     [0.5562, 0.5186, 0.5357,  ...,        │ │
│ │                          0.5402, 0.5282, 0.5227]]],                      │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0.5283, 0.5320, 0.5297,  ...,        │ │
│ │                          0.5163, 0.5222, 0.5270],                        │ │
│ │                          │   │     [0.5157, 0.5308, 0.5202,  ...,        │ │
│ │                          0.5246, 0.5220, 0.4953],                        │ │
│ │                          │   │     [0.5169, 0.5310, 0.5534,  ...,        │ │
│ │                          0.4896, 0.5006, 0.4849],                        │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0.5914, 0.6687, 0.6876,  ...,        │ │
│ │                          0.5511, 0.4897, 0.4807],                        │ │
│ │                          │   │     [0.5919, 0.5934, 0.5702,  ...,        │ │
│ │                          0.5588, 0.4767, 0.4970],                        │ │
│ │                          │   │     [0.5077, 0.4313, 0.4392,  ...,        │ │
│ │                          0.4996, 0.5593, 0.5194]]],                      │ │
│ │                          │   │                                           │ │
│ │                          │   │                                           │ │
│ │                          │   │   [[[0.5467, 0.5264, 0.5220,  ...,        │ │
│ │                          0.5254, 0.5283, 0.5281],                        │ │
│ │                          │   │     [0.5312, 0.5093, 0.5018,  ...,        │ │
│ │                          0.5190, 0.5209, 0.5122],                        │ │
│ │                          │   │     [0.5259, 0.5058, 0.5187,  ...,        │ │
│ │                          0.5452, 0.5034, 0.4971],                        │ │
│ │                          │   │     ...,                                  │ │
│ │                          │   │     [0.5376, 0.5168, 0.5001,  ...,        │ │
│ │                          0.5367, 0.5322, 0.5141],                        │ │
│ │                          │   │     [0.5378, 0.5344, 0.4941,  ...,        │ │
│ │                          0.5194, 0.5230, 0.5108],                        │ │
│ │                          │   │     [0.5229, 0.5276, 0.4984,  ...,        │ │
│ │                          0.5379, 0.5327, 0.5133]]]],                     │ │
│ │                          │      device='cuda:0',                         │ │
│ │                          grad_fn=<SigmoidBackward0>)                     │ │
│ │               patience = 5                                               │ │
│ │           running_dice = 0.0                                             │ │
│ │             running_f1 = 0.0                                             │ │
│ │            running_iou = 0.0                                             │ │
│ │           running_loss = 0.0                                             │ │
│ │      running_precision = 0.0                                             │ │
│ │         running_recall = 0.0                                             │ │
│ │              scheduler = <torch.optim.lr_scheduler.ReduceLROnPlateau     │ │
│ │                          object at 0x7bbc085b3310>                       │ │
│ │                    std = [36.28290664, 34.82507359, 41.48902725]         │ │
│ │                teacher = ResUnetTeacher(                                 │ │
│ │                            (inc): DoubleConv(                            │ │
│ │                          │   (conv): Sequential(                         │ │
│ │                          │     (0): Conv2d(3, 64, kernel_size=(3, 3),    │ │
│ │                          stride=(1, 1), padding=(1, 1), bias=False)      │ │
│ │                          │     (1): BatchNorm2d(64, eps=1e-05,           │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │     (2): ReLU(inplace=True)                   │ │
│ │                          │     (3): Conv2d(64, 64, kernel_size=(3, 3),   │ │
│ │                          stride=(1, 1), padding=(1, 1), bias=False)      │ │
│ │                          │     (4): BatchNorm2d(64, eps=1e-05,           │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │     (5): ReLU(inplace=True)                   │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (down1): Down(                                │ │
│ │                          │   (pool): MaxPool2d(kernel_size=2, stride=2,  │ │
│ │                          padding=0, dilation=1, ceil_mode=False)         │ │
│ │                          │   (conv): DoubleConv(                         │ │
│ │                          │     (conv): Sequential(                       │ │
│ │                          │   │   (0): Conv2d(64, 128, kernel_size=(3,    │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (1): BatchNorm2d(128, eps=1e-05,        │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (2): ReLU(inplace=True)                 │ │
│ │                          │   │   (3): Conv2d(128, 128, kernel_size=(3,   │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (4): BatchNorm2d(128, eps=1e-05,        │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (5): ReLU(inplace=True)                 │ │
│ │                          │     )                                         │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (down2): Down(                                │ │
│ │                          │   (pool): MaxPool2d(kernel_size=2, stride=2,  │ │
│ │                          padding=0, dilation=1, ceil_mode=False)         │ │
│ │                          │   (conv): DoubleConv(                         │ │
│ │                          │     (conv): Sequential(                       │ │
│ │                          │   │   (0): Conv2d(128, 256, kernel_size=(3,   │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (1): BatchNorm2d(256, eps=1e-05,        │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (2): ReLU(inplace=True)                 │ │
│ │                          │   │   (3): Conv2d(256, 256, kernel_size=(3,   │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (4): BatchNorm2d(256, eps=1e-05,        │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (5): ReLU(inplace=True)                 │ │
│ │                          │     )                                         │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (up1): Up(                                    │ │
│ │                          │   (up): ConvTranspose2d(256, 128,             │ │
│ │                          kernel_size=(2, 2), stride=(2, 2))              │ │
│ │                          │   (conv): DoubleConv(                         │ │
│ │                          │     (conv): Sequential(                       │ │
│ │                          │   │   (0): Conv2d(256, 128, kernel_size=(3,   │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (1): BatchNorm2d(128, eps=1e-05,        │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (2): ReLU(inplace=True)                 │ │
│ │                          │   │   (3): Conv2d(128, 128, kernel_size=(3,   │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (4): BatchNorm2d(128, eps=1e-05,        │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (5): ReLU(inplace=True)                 │ │
│ │                          │     )                                         │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (att1): AttentionBlock(                       │ │
│ │                          │   (channel_attention): ChannelAttention(      │ │
│ │                          │     (avg_pool):                               │ │
│ │                          AdaptiveAvgPool2d(output_size=1)                │ │
│ │                          │     (max_pool):                               │ │
│ │                          AdaptiveMaxPool2d(output_size=1)                │ │
│ │                          │     (fc): Sequential(                         │ │
│ │                          │   │   (0): Conv2d(128, 8, kernel_size=(1, 1), │ │
│ │                          stride=(1, 1), bias=False)                      │ │
│ │                          │   │   (1): ReLU(inplace=True)                 │ │
│ │                          │   │   (2): Conv2d(8, 128, kernel_size=(1, 1), │ │
│ │                          stride=(1, 1), bias=False)                      │ │
│ │                          │     )                                         │ │
│ │                          │     (sigmoid): Sigmoid()                      │ │
│ │                          │   )                                           │ │
│ │                          │   (spatial_attention): SpatialAttention(      │ │
│ │                          │     (avg_pool): AvgPool2d(kernel_size=7,      │ │
│ │                          stride=1, padding=3)                            │ │
│ │                          │     (max_pool): MaxPool2d(kernel_size=7,      │ │
│ │                          stride=1, padding=3, dilation=1,                │ │
│ │                          ceil_mode=False)                                │ │
│ │                          │     (conv): Conv2d(256, 1, kernel_size=(7,    │ │
│ │                          7), stride=(1, 1), padding=(3, 3), bias=False)  │ │
│ │                          │     (sigmoid): Sigmoid()                      │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (up2): Up(                                    │ │
│ │                          │   (up): ConvTranspose2d(128, 64,              │ │
│ │                          kernel_size=(2, 2), stride=(2, 2))              │ │
│ │                          │   (conv): DoubleConv(                         │ │
│ │                          │     (conv): Sequential(                       │ │
│ │                          │   │   (0): Conv2d(128, 64, kernel_size=(3,    │ │
│ │                          3), stride=(1, 1), padding=(1, 1), bias=False)  │ │
│ │                          │   │   (1): BatchNorm2d(64, eps=1e-05,         │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (2): ReLU(inplace=True)                 │ │
│ │                          │   │   (3): Conv2d(64, 64, kernel_size=(3, 3), │ │
│ │                          stride=(1, 1), padding=(1, 1), bias=False)      │ │
│ │                          │   │   (4): BatchNorm2d(64, eps=1e-05,         │ │
│ │                          momentum=0.1, affine=True,                      │ │
│ │                          track_running_stats=True)                       │ │
│ │                          │   │   (5): ReLU(inplace=True)                 │ │
│ │                          │     )                                         │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (att2): AttentionBlock(                       │ │
│ │                          │   (channel_attention): ChannelAttention(      │ │
│ │                          │     (avg_pool):                               │ │
│ │                          AdaptiveAvgPool2d(output_size=1)                │ │
│ │                          │     (max_pool):                               │ │
│ │                          AdaptiveMaxPool2d(output_size=1)                │ │
│ │                          │     (fc): Sequential(                         │ │
│ │                          │   │   (0): Conv2d(64, 4, kernel_size=(1, 1),  │ │
│ │                          stride=(1, 1), bias=False)                      │ │
│ │                          │   │   (1): ReLU(inplace=True)                 │ │
│ │                          │   │   (2): Conv2d(4, 64, kernel_size=(1, 1),  │ │
│ │                          stride=(1, 1), bias=False)                      │ │
│ │                          │     )                                         │ │
│ │                          │     (sigmoid): Sigmoid()                      │ │
│ │                          │   )                                           │ │
│ │                          │   (spatial_attention): SpatialAttention(      │ │
│ │                          │     (avg_pool): AvgPool2d(kernel_size=7,      │ │
│ │                          stride=1, padding=3)                            │ │
│ │                          │     (max_pool): MaxPool2d(kernel_size=7,      │ │
│ │                          stride=1, padding=3, dilation=1,                │ │
│ │                          ceil_mode=False)                                │ │
│ │                          │     (conv): Conv2d(128, 1, kernel_size=(7,    │ │
│ │                          7), stride=(1, 1), padding=(3, 3), bias=False)  │ │
│ │                          │     (sigmoid): Sigmoid()                      │ │
│ │                          │   )                                           │ │
│ │                            )                                             │ │
│ │                            (outc): Conv2d(64, 1, kernel_size=(1, 1),     │ │
│ │                          stride=(1, 1))                                  │ │
│ │                          )                                               │ │
│ │           train_loader = <torch.utils.data.dataloader.DataLoader object  │ │
│ │                          at 0x7bbc085b3ca0>                              │ │
│ │             val_loader = <torch.utils.data.dataloader.DataLoader object  │ │
│ │                          at 0x7bbc085b3e50>                              │ │
│ │               whu_mean = [72.62323902, 99.33869521, 82.94464024]         │ │
│ │             whu_module = <dataloader.BuildingDataModule object at        │ │
│ │                          0x7bbc085136d0>                                 │ │
│ │               whu_path = '/media/tidop/Datos_4TB1/databases/whu_adjuste… │ │
│ │                whu_std = [43.81751311, 42.46326449, 50.62061044]         │ │
│ │      whu_train_dataset = <dataloader.TeacherDataset object at            │ │
│ │                          0x7bbc9d588100>                                 │ │
│ │        whu_val_dataset = <dataloader.TeacherDataset object at            │ │
│ │                          0x7bbc085b3520>                                 │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/tor │
│ ch/_tensor.py:581 in backward                                                │
│                                                                              │
│    578 │   │   │   │   create_graph=create_graph,                            │
│    579 │   │   │   │   inputs=inputs,                                        │
│    580 │   │   │   )                                                         │
│ ❱  581 │   │   torch.autograd.backward(                                      │
│    582 │   │   │   self, gradient, retain_graph, create_graph, inputs=inputs │
│    583 │   │   )                                                             │
│    584                                                                       │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │ create_graph = False                                                     │ │
│ │     gradient = None                                                      │ │
│ │       inputs = None                                                      │ │
│ │ retain_graph = None                                                      │ │
│ │         self = tensor([[4.0376, 3.9540, 3.6383,  ..., 3.8538, 3.6098,    │ │
│ │                3.6106],                                                  │ │
│ │                │   │   [4.0460, 3.9353, 3.6228,  ..., 3.8989, 3.8509,    │ │
│ │                3.4479],                                                  │ │
│ │                │   │   [3.9938, 3.8932, 3.6998,  ..., 3.9649, 3.6079,    │ │
│ │                3.4716],                                                  │ │
│ │                │   │   ...,                                              │ │
│ │                │   │   [4.7741, 4.6097, 4.5613,  ..., 3.8664, 3.8216,    │ │
│ │                3.6500],                                                  │ │
│ │                │   │   [4.7019, 4.5230, 4.4785,  ..., 3.7876, 3.8281,    │ │
│ │                3.7414],                                                  │ │
│ │                │   │   [4.7260, 4.5571, 4.5007,  ..., 3.9725, 4.0157,    │ │
│ │                3.8498]],                                                 │ │
│ │                │      device='cuda:0', grad_fn=<AddBackward0>)           │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/tor │
│ ch/autograd/__init__.py:340 in backward                                      │
│                                                                              │
│   337 │   )                                                                  │
│   338 │                                                                      │
│   339 │   grad_tensors_ = _tensor_or_tensors_to_tuple(grad_tensors, len(tens │
│ ❱ 340 │   grad_tensors_ = _make_grads(tensors, grad_tensors_, is_grads_batch │
│   341 │   if retain_graph is None:                                           │
│   342 │   │   retain_graph = create_graph                                    │
│   343                                                                        │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │   create_graph = False                                                   │ │
│ │   grad_tensors = None                                                    │ │
│ │  grad_tensors_ = (None,)                                                 │ │
│ │ grad_variables = None                                                    │ │
│ │         inputs = ()                                                      │ │
│ │   retain_graph = None                                                    │ │
│ │        tensors = (                                                       │ │
│ │                  │   tensor([[4.0376, 3.9540, 3.6383,  ..., 3.8538,      │ │
│ │                  3.6098, 3.6106],                                        │ │
│ │                  │   │   [4.0460, 3.9353, 3.6228,  ..., 3.8989, 3.8509,  │ │
│ │                  3.4479],                                                │ │
│ │                  │   │   [3.9938, 3.8932, 3.6998,  ..., 3.9649, 3.6079,  │ │
│ │                  3.4716],                                                │ │
│ │                  │   │   ...,                                            │ │
│ │                  │   │   [4.7741, 4.6097, 4.5613,  ..., 3.8664, 3.8216,  │ │
│ │                  3.6500],                                                │ │
│ │                  │   │   [4.7019, 4.5230, 4.4785,  ..., 3.7876, 3.8281,  │ │
│ │                  3.7414],                                                │ │
│ │                  │   │   [4.7260, 4.5571, 4.5007,  ..., 3.9725, 4.0157,  │ │
│ │                  3.8498]],                                               │ │
│ │                  │      device='cuda:0', grad_fn=<AddBackward0>),        │ │
│ │                  )                                                       │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
│                                                                              │
│ /home/tidop/Documentos/miniconda3/envs/deep/lib/python3.10/site-packages/tor │
│ ch/autograd/__init__.py:198 in _make_grads                                   │
│                                                                              │
│   195 │   │   │   │   │   assert isinstance(out, torch.Tensor)               │
│   196 │   │   │   │   │   out_numel_is_1 = out.numel() == 1                  │
│   197 │   │   │   │   if not out_numel_is_1:                                 │
│ ❱ 198 │   │   │   │   │   raise RuntimeError(                                │
│   199 │   │   │   │   │   │   "grad can be implicitly created only for scala │
│   200 │   │   │   │   │   )                                                  │
│   201 │   │   │   │   if not out_dtype.is_floating_point:                    │
│                                                                              │
│ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
│ │              grad = None                                                 │ │
│ │             grads = (None,)                                              │ │
│ │  is_grads_batched = False                                                │ │
│ │      NestedTensor = <class                                               │ │
│ │                     'torch.nested._internal.nested_tensor.NestedTensor'> │ │
│ │         new_grads = []                                                   │ │
│ │               out = tensor([[4.0376, 3.9540, 3.6383,  ..., 3.8538,       │ │
│ │                     3.6098, 3.6106],                                     │ │
│ │                     │   │   [4.0460, 3.9353, 3.6228,  ..., 3.8989,       │ │
│ │                     3.8509, 3.4479],                                     │ │
│ │                     │   │   [3.9938, 3.8932, 3.6998,  ..., 3.9649,       │ │
│ │                     3.6079, 3.4716],                                     │ │
│ │                     │   │   ...,                                         │ │
│ │                     │   │   [4.7741, 4.6097, 4.5613,  ..., 3.8664,       │ │
│ │                     3.8216, 3.6500],                                     │ │
│ │                     │   │   [4.7019, 4.5230, 4.4785,  ..., 3.7876,       │ │
│ │                     3.8281, 3.7414],                                     │ │
│ │                     │   │   [4.7260, 4.5571, 4.5007,  ..., 3.9725,       │ │
│ │                     4.0157, 3.8498]],                                    │ │
│ │                     │      device='cuda:0', grad_fn=<AddBackward0>)      │ │
│ │        out_device = None                                                 │ │
│ │         out_dtype = torch.float32                                        │ │
│ │ out_is_cpp_nested = False                                                │ │
│ │     out_is_nested = False                                                │ │
│ │    out_numel_is_1 = False                                                │ │
│ │          out_size = torch.Size([256, 256])                               │ │
│ │           outputs = (                                                    │ │
│ │                     │   tensor([[4.0376, 3.9540, 3.6383,  ..., 3.8538,   │ │
│ │                     3.6098, 3.6106],                                     │ │
│ │                     │   │   [4.0460, 3.9353, 3.6228,  ..., 3.8989,       │ │
│ │                     3.8509, 3.4479],                                     │ │
│ │                     │   │   [3.9938, 3.8932, 3.6998,  ..., 3.9649,       │ │
│ │                     3.6079, 3.4716],                                     │ │
│ │                     │   │   ...,                                         │ │
│ │                     │   │   [4.7741, 4.6097, 4.5613,  ..., 3.8664,       │ │
│ │                     3.8216, 3.6500],                                     │ │
│ │                     │   │   [4.7019, 4.5230, 4.4785,  ..., 3.7876,       │ │
│ │                     3.8281, 3.7414],                                     │ │
│ │                     │   │   [4.7260, 4.5571, 4.5007,  ..., 3.9725,       │ │
│ │                     4.0157, 3.8498]],                                    │ │
│ │                     │      device='cuda:0', grad_fn=<AddBackward0>),     │ │
│ │                     )                                                    │ │
│ ╰──────────────────────────────────────────────────────────────────────────╯ │
╰──────────────────────────────────────────────────────────────────────────────╯
RuntimeError: grad can be implicitly created only for scalar outputs
